WEBVTT
Kind: captions
Language: en

00:00:00.910 --> 00:00:03.860
Hi, in this segment,
I'm going to introduce the two tasks of

00:00:03.860 --> 00:00:07.750
named entity recognition and
information extraction, methods for

00:00:07.750 --> 00:00:12.060
getting simple structured
information out of text documents.

00:00:12.060 --> 00:00:14.500
Let's start with information extraction.

00:00:14.500 --> 00:00:17.870
The goal of information
extraction systems is to find and

00:00:17.870 --> 00:00:20.218
understand limited
relevant parts of a text.

00:00:20.218 --> 00:00:23.360
And normally,
we're going to run it in the context

00:00:23.360 --> 00:00:27.300
where the system gathers information
across many pieces of text.

00:00:27.300 --> 00:00:29.810
And the goal of doing this
information-gathering

00:00:29.810 --> 00:00:33.090
is to be able to produce some sort
of structured representation of

00:00:33.090 --> 00:00:34.770
the relevant information.

00:00:34.770 --> 00:00:39.662
So, you can think of it as instances
of a database relations that

00:00:39.662 --> 00:00:44.420
rose in the database table or
as a knowledge base.

00:00:44.420 --> 00:00:48.680
And when we do information extraction,
we can have one of two goals.

00:00:48.680 --> 00:00:52.370
One goal is to directly help
people to organize information, so

00:00:52.370 --> 00:00:54.310
that it's useful to people.

00:00:54.310 --> 00:00:59.180
And the other possibility is to put the
information in semantically precise forms.

00:00:59.180 --> 00:01:03.700
So, commonly, computers for
other downstream information processing

00:01:03.700 --> 00:01:08.340
tasks won't be able to perform them, if
the input is just natural language text.

00:01:08.340 --> 00:01:12.260
But if we can have pulled out
various kinds of relations such as

00:01:12.260 --> 00:01:17.800
a database table, then, it's very easy to
do subsequent data mining and processing.

00:01:17.800 --> 00:01:22.580
So, the kind of information that
IE systems extract is clear,

00:01:22.580 --> 00:01:28.490
factual information, the kind of who did
what to whom when kind of information.

00:01:28.490 --> 00:01:30.750
So, let's take a look
at an example of that.

00:01:30.750 --> 00:01:33.120
So, here are a couple of examples.

00:01:33.120 --> 00:01:37.240
One's gathering earnings, profits,
board members, headquarters, and

00:01:37.240 --> 00:01:41.650
if this kind of factual information
about companies from company reports.

00:01:41.650 --> 00:01:47.545
So, the idea is that the system
can look through the texts and

00:01:47.545 --> 00:01:52.960
then, it sees okay, here's the name of a
company, and then, it's talking about its

00:01:52.960 --> 00:01:58.132
headquarters, and it says that
the headquarters are located in, so that's

00:01:58.132 --> 00:02:02.500
kind of an indicator of a headquarter's
location, Melbourne, Australia.

00:02:02.500 --> 00:02:06.600
And what we're going to get
out of that then is this

00:02:07.920 --> 00:02:12.270
relation which you can think of as
an instance of a database table.

00:02:12.270 --> 00:02:13.560
That's only one example.

00:02:13.560 --> 00:02:15.240
There are lots of other examples.

00:02:15.240 --> 00:02:18.050
Another example is this
one that I show here.

00:02:18.050 --> 00:02:23.397
There are lots of cases in biotech's
mining, so learning drug-gene

00:02:23.397 --> 00:02:28.383
product interactions,
learning subcellular localizations,

00:02:28.383 --> 00:02:33.095
lots of relation of interest to
bioscientists in various ways

00:02:33.095 --> 00:02:37.465
have been worked on in
information extraction systems.

00:02:38.845 --> 00:02:42.885
In the more consumer space, information
extraction is now available and

00:02:42.885 --> 00:02:47.162
I think popular in various
applications like either Apple or

00:02:47.162 --> 00:02:49.922
Google mail, or is used in web indexing.

00:02:49.922 --> 00:02:53.105
So, here's a little
example from Apple mail.

00:02:53.105 --> 00:02:56.336
And so, here,

00:02:56.336 --> 00:03:00.814
there's this date.

00:03:00.814 --> 00:03:05.114
And so, Apple mail recognized
that there was a date there and

00:03:05.114 --> 00:03:07.233
put in that little arrow box.

00:03:07.233 --> 00:03:11.789
And when I hold that down, it's then
offering to create a calendar event for

00:03:11.789 --> 00:03:12.428
me and so,

00:03:12.428 --> 00:03:16.930
that's kind of a little help of now
allowing me to that kind of task faster.

00:03:18.820 --> 00:03:22.230
This kind of information extraction
is often fairly simple and

00:03:22.230 --> 00:03:27.185
seems to be mainly based on using the kind
of regular expressions that we saw

00:03:27.185 --> 00:03:29.755
earlier, including name lists.

00:03:29.755 --> 00:03:33.835
Here's one more example about how
companies are starting to surface

00:03:33.835 --> 00:03:36.865
information extraction and
search applications.

00:03:36.865 --> 00:03:42.625
So, if I stick into Google,
bhp billiton headquarters.

00:03:42.625 --> 00:03:47.955
As well as regular web search results,
there's actually giving me, right here,

00:03:47.955 --> 00:03:51.900
best guess for
headquarters is Melbourne, London.

00:03:51.900 --> 00:03:57.560
Of course, we can argue a little about
whether that's the perfect answer.

00:03:57.560 --> 00:04:01.732
They're really kind of two
separate answers here.

00:04:01.732 --> 00:04:06.600
BHP Billiton's actually kind of a complex
case, cause they have this complicated

00:04:06.600 --> 00:04:10.110
jewel company structure and there is
a Melbourne office and a London office.

00:04:10.110 --> 00:04:12.450
So, we'll call that just about correct.

00:04:13.850 --> 00:04:15.650
Okay, that was information extraction.

00:04:15.650 --> 00:04:20.960
Let me now go on and look at a particular
sub-task that has become very important,

00:04:20.960 --> 00:04:22.790
named entity recognition.

00:04:22.790 --> 00:04:28.100
So, the idea of named entity recognition
is that we're going to in particular just

00:04:28.100 --> 00:04:33.270
look for and classify names in a text.

00:04:33.270 --> 00:04:39.520
So, the first step is we find names.

00:04:39.520 --> 00:04:44.845
So here, we then found a name and
in the particular of what that means is

00:04:44.845 --> 00:04:50.870
we're finding the limits of the name,
so this one is these two tokens.

00:04:50.870 --> 00:04:54.390
This name is this one token.

00:04:54.390 --> 00:04:58.720
And then, once we've done that,
we're going to classify the names.

00:04:58.720 --> 00:05:04.320
So, we're going to say that this
name here is a person name.

00:05:04.320 --> 00:05:09.670
This here is the name of an organization.

00:05:09.670 --> 00:05:11.180
This is a date.

00:05:12.260 --> 00:05:16.274
And then, we have a sequence
of further person names.

00:05:16.274 --> 00:05:20.960
All right, these one's Rob Oakeshott and
goes across the line break.

00:05:20.960 --> 00:05:26.226
So, to say a little bit more
precisely what the task is,

00:05:26.226 --> 00:05:31.618
we have this sort of phrase
of Named Entity Recognition.

00:05:31.618 --> 00:05:36.200
It's a little bit of a code word
these days that reflects the history.

00:05:36.200 --> 00:05:39.710
The idea of it was that entities

00:05:39.710 --> 00:05:43.420
were meant to refer to
discrete things in the world.

00:05:43.420 --> 00:05:48.770
So, I am an entity,
Stanford University is an entity,

00:05:48.770 --> 00:05:53.990
but something like sand or
air isn't an entity,

00:05:53.990 --> 00:05:58.170
that there's not a specific
delineated physical thing.

00:05:58.170 --> 00:06:03.979
And then, the idea of named were
that some entities have names.

00:06:03.979 --> 00:06:08.609
So, I, Christopher Manning, have a name,
but the chair i'm sitting in

00:06:08.609 --> 00:06:13.464
as I record this, it is also an entity,
it's a discrete physical thing, but

00:06:13.464 --> 00:06:18.910
it doesn't actually have a name attached
to it, so it's not a named entity.

00:06:18.910 --> 00:06:21.520
That's the kind of philosophical history.

00:06:21.520 --> 00:06:26.250
In practices, the word is used
in named entity recognition,

00:06:26.250 --> 00:06:27.650
that's not quite what it means.

00:06:27.650 --> 00:06:33.534
because effectively, what we're doing is
using named entity recognition to mean,

00:06:33.534 --> 00:06:38.999
easily distinguishable names or
other things in text that we can pick out.

00:06:38.999 --> 00:06:43.641
So, in particular 2010, so
things like dates, times,

00:06:43.641 --> 00:06:47.769
quantities are normally
regarded as named entities.

00:06:47.769 --> 00:06:52.641
Although, according to the original
starting point of the name, something like

00:06:52.641 --> 00:06:57.299
a date or a chemical or a protein isn't
actually an entity at all, but we always

00:06:57.299 --> 00:07:02.540
include those kinds of things when we're
building named entity recognition systems.

00:07:04.060 --> 00:07:08.330
Okay, so what is the use of named
entity recognition systems?

00:07:08.330 --> 00:07:12.830
Well, named entities,
if you identify them in a text,

00:07:12.830 --> 00:07:15.940
they're something that can be indexed or
linked off.

00:07:15.940 --> 00:07:22.220
So, as I note down below, many companies
make use of various techniques for

00:07:22.220 --> 00:07:26.580
taking into these on web pages, and
then, they can provide links off of

00:07:26.580 --> 00:07:31.290
those entities to bio pages or
topic pages, or other things of that sort.

00:07:31.290 --> 00:07:35.400
So, there are a whole bunch of commercial
products that run as web services

00:07:35.400 --> 00:07:37.970
that allow you to do that kind of thing.

00:07:37.970 --> 00:07:42.550
If in general you want to be crawling
the web and picking up sentiment,

00:07:42.550 --> 00:07:46.420
we discussed earlier, detecting
sentiment as to whether it's positive or

00:07:46.420 --> 00:07:51.190
negative, but you will then also need to
work out who the sentiment is about, or

00:07:51.190 --> 00:07:52.820
what the sentiment is about.

00:07:52.820 --> 00:07:55.290
And so, at that point,
you need to be picking up company or

00:07:55.290 --> 00:08:00.010
product names in the text, and
that's a task of named entity recognition.

00:08:00.010 --> 00:08:03.420
But there are lot of other uses
when named entity recognition

00:08:03.420 --> 00:08:06.540
is a subcomponent of a larger task.

00:08:06.540 --> 00:08:10.230
And so, commonly,
when you are doing information extraction,

00:08:10.230 --> 00:08:15.330
a lot of what you're doing is
actually identifying named entities,

00:08:15.330 --> 00:08:17.770
and then,
working out the relationship between them.

00:08:17.770 --> 00:08:20.310
So, we'll talk later
about question answering.

00:08:20.310 --> 00:08:24.350
And in question answering, for various
kinds of questions, often the answers

00:08:24.350 --> 00:08:27.890
are named identities, when did
something happen, or who did something.

00:08:27.890 --> 00:08:29.330
And so, it helps a lot for

00:08:29.330 --> 00:08:32.750
question answering,
if you have good named entity extraction.

00:08:32.750 --> 00:08:37.100
Another example that we also saw of how
people use named entity recognition that

00:08:37.100 --> 00:08:41.750
plays off this having semantically
interpreted information

00:08:41.750 --> 00:08:44.870
is to use it in then various
kinds of things like

00:08:44.870 --> 00:08:49.230
calendaring applications where you're
making use of the semantic interpretation.

00:08:49.230 --> 00:08:55.380
Okay, I hope that's enough to have given
you guys a good sense of these two tasks,

00:08:55.380 --> 00:09:02.360
named entity recognition of simply picking
out concrete names of objects, people,

00:09:02.360 --> 00:09:06.920
organizations, etc., or quantities,
dates, times, and things like that.

00:09:06.920 --> 00:09:10.630
And then,
the bigger task of information extraction

00:09:10.630 --> 00:09:15.900
where the goal was to pick out particular
relations both from the database table,

00:09:15.900 --> 00:09:18.510
from pieces of unstructured
natural language text.

