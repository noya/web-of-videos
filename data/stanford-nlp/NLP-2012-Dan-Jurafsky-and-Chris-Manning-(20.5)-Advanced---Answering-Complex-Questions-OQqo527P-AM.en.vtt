WEBVTT
Kind: captions
Language: en

00:00:01.580 --> 00:00:04.883
Now, there are some kinds of advanced
questions that don't tend to be answered

00:00:04.883 --> 00:00:08.089
in modern commercial systems, but
are part of modern research systems, and

00:00:08.089 --> 00:00:09.194
let's turn to those now.

00:00:12.189 --> 00:00:14.210
Imagine the following harder question.

00:00:14.210 --> 00:00:16.110
What is water spinach?

00:00:16.110 --> 00:00:20.850
And the answer we'd like to give is
really a full paragraph that talks about

00:00:20.850 --> 00:00:25.240
water spinach and its history and
names form different languages and so on.

00:00:26.700 --> 00:00:29.450
So we're not be able to
build that kind of question,

00:00:29.450 --> 00:00:32.740
not by just looking it up on the web but
by merging together.

00:00:32.740 --> 00:00:36.427
Possible snippets we might
get from different sources or

00:00:36.427 --> 00:00:41.341
we might get hard medical questions
like in children with an acute illness,

00:00:41.341 --> 00:00:44.516
what's the efficacy of
a particular medicine?

00:00:44.516 --> 00:00:47.240
And an answer there might be, again,

00:00:47.240 --> 00:00:51.854
a summary of things we might see
from a particular PubMed paper.

00:00:51.854 --> 00:00:56.070
We might want to read a sentence and
decide, read a document and extract

00:00:56.070 --> 00:01:00.760
sentences, and we can say where they
came from and how much we believe them.

00:01:00.760 --> 00:01:03.780
These are the kind of harder things that
are important in the research literature

00:01:05.060 --> 00:01:07.400
but haven't yet
made it into modern commercial systems.

00:01:08.940 --> 00:01:11.260
And for answering these harder questions,

00:01:11.260 --> 00:01:15.010
we often use an approach that's called
query focused summarization and

00:01:15.010 --> 00:01:18.640
query focused summarization means that
we're applying a natural language

00:01:18.640 --> 00:01:21.770
summarization algorithm, we're
going to summarize multiple documents.

00:01:21.770 --> 00:01:25.260
Pull information from multiple documents,
but it's query focused.

00:01:25.260 --> 00:01:27.830
It's not just a summary of everything
that's in those documents.

00:01:27.830 --> 00:01:29.160
It's the parts that are relevant for

00:01:29.160 --> 00:01:33.830
a query, and there are two kinds of
algorithm for query-focused summarization.

00:01:33.830 --> 00:01:37.210
One of them, what we might call
the bottom-up snippet method,

00:01:37.210 --> 00:01:41.658
we find a set of relevant documents,
extract information from them,

00:01:41.658 --> 00:01:46.380
bottom-up using tf-idf,
deciding how many sentences

00:01:46.380 --> 00:01:50.550
are relevant by their tf-idf score,
other kinds of scores.

00:01:50.550 --> 00:01:53.720
And then, we combine and
modify the sentences into an answer.

00:01:54.810 --> 00:01:56.200
And what I'm going to talk about today,

00:01:56.200 --> 00:01:59.960
is a second method, which we might think
of as an information extraction method.

00:01:59.960 --> 00:02:04.530
And here, we build specific answers that
work for different question types, so

00:02:04.530 --> 00:02:06.300
we might have definition questions,

00:02:06.300 --> 00:02:09.820
or biography questions or
certain medical questions.

00:02:09.820 --> 00:02:12.710
And for each of those,
we might decide what

00:02:12.710 --> 00:02:16.370
constitutes a good definition question or
a good biography question or

00:02:16.370 --> 00:02:19.894
a good medical question and then we're
going to build specific answers for those.

00:02:22.180 --> 00:02:23.250
So for example,

00:02:23.250 --> 00:02:27.020
we know that a good biography
contains a person's birth and death.

00:02:27.020 --> 00:02:29.230
Dates, it contains how famous they are.

00:02:29.230 --> 00:02:32.480
What they're famous for,
their education, their nationality and

00:02:32.480 --> 00:02:33.630
these kind of things.

00:02:33.630 --> 00:02:37.733
Where as a good definition contains
what's often called a genus or hypernym.

00:02:37.733 --> 00:02:39.400
So what is a Hajj?

00:02:39.400 --> 00:02:41.170
It's a type of ritual.

00:02:41.170 --> 00:02:45.740
And a good medical answer contains
the problem that the medicine is design to

00:02:46.820 --> 00:02:51.010
solve the intervention, what is this
drug or intervention we're going to use.

00:02:51.010 --> 00:02:55.000
And then, the outcome, the result of
the study describing this problem.

00:02:57.800 --> 00:03:02.500
So for these three kinds of answers,
we might know that we need to extract for

00:03:02.500 --> 00:03:05.420
definition question we gotta
build a genus detector and

00:03:05.420 --> 00:03:08.000
a species extractor, subtype extractor.

00:03:08.000 --> 00:03:12.150
Whereas, for a biography question,
we need to build a date extractor and

00:03:12.150 --> 00:03:13.980
a nationality extractor.

00:03:13.980 --> 00:03:18.332
Well, for a drug efficacy question, we
have to extract the population of a study

00:03:18.332 --> 00:03:22.110
was run on, or what the problem or
intervention are and so on.

00:03:22.110 --> 00:03:25.380
And I've given you examples here of the
kind of sentences we need to extract for

00:03:25.380 --> 00:03:26.300
these kind of answers.

00:03:28.560 --> 00:03:30.200
So here's a sample architecture for

00:03:30.200 --> 00:03:33.130
complex question answering system
from Blair- Goldensohn et al.

00:03:35.080 --> 00:03:38.770
Here, you might have a question like,
what is the Hajj?

00:03:38.770 --> 00:03:42.440
And we might specify that we'd
like to search 20 documents and

00:03:42.440 --> 00:03:45.530
extract an answer of about 8 sentences.

00:03:45.530 --> 00:03:49.790
So we'll pull do document retrieval,
pull lots of relevant documents.

00:03:49.790 --> 00:03:51.868
And now we're going to build classifiers,

00:03:51.868 --> 00:03:54.490
whose job is to pull out
Genus-Species Sentences.

00:03:54.490 --> 00:03:59.100
So the Hajj is pilgrimage, the Hajj
is a milestone, the Hajj is a pillar,

00:03:59.100 --> 00:04:00.100
and so on.

00:04:00.100 --> 00:04:04.708
And classify that pulls out other
non-kinds of definition sentences.

00:04:04.708 --> 00:04:08.535
And we're going to cluster these,
and order these,

00:04:08.535 --> 00:04:13.341
and produce as the response answer
of about eight sentences that

00:04:13.341 --> 00:04:16.736
summarizes a good
response to the question.

00:04:20.300 --> 00:04:24.088
So advanced question answering
algorithms used in the laboratory

00:04:24.088 --> 00:04:26.727
either use information extraction methods,

00:04:26.727 --> 00:04:31.530
or use bottom-up clustering methods to
combine information from lots of documents

00:04:31.530 --> 00:04:35.400
to create a set of sentences
that answer a question.

00:04:35.400 --> 00:04:40.230
But more commonly, commercial systems
are based on factoid answers.

00:04:40.230 --> 00:04:44.140
So either using knowledge bases or
more often using information retrieval

00:04:44.140 --> 00:04:49.260
techniques to find sentences that contain
an answer to the question extracting and

00:04:49.260 --> 00:04:51.590
ranking the answer and
then presenting it to the user.

