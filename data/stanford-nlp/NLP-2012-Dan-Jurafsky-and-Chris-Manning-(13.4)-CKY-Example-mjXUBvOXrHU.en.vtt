WEBVTT
Kind: captions
Language: en

00:00:01.010 --> 00:00:05.690
It's hard to really get a sense of the CKY
algorithm from staring at pseudo code, but

00:00:05.690 --> 00:00:09.210
I think if we work through an example,
it'll actually seem pretty natural and

00:00:09.210 --> 00:00:09.940
straightforward.

00:00:09.940 --> 00:00:11.580
So let's do that.

00:00:11.580 --> 00:00:14.450
So starting off, here's the grammar
that we're going to use.

00:00:14.450 --> 00:00:18.060
It's similar to the ones
that I've shown before,

00:00:18.060 --> 00:00:20.410
when we did the grammar transformations.

00:00:20.410 --> 00:00:24.370
It's a grammar with unaries but
with no empties in it.

00:00:24.370 --> 00:00:29.090
Okay, so there's only one conceptual leap
that we have to make to get this to work.

00:00:29.090 --> 00:00:32.335
And that is, before,
I showed you parse triangles,

00:00:32.335 --> 00:00:35.285
the natural way that makes sense.

00:00:35.285 --> 00:00:41.245
But, it turns out that it's really hard
to write text in diagonal diamonds.

00:00:41.245 --> 00:00:45.282
And so, by and large, what everyone
has decided is that it's much,

00:00:45.282 --> 00:00:51.312
much easier to get human beings to tilt
their necks 45 degrees to the right.

00:00:51.312 --> 00:00:53.662
And so, they can see a parse triangle,

00:00:53.662 --> 00:00:56.152
rather than to actually
print things that way.

00:00:56.152 --> 00:01:00.952
So conceptually, you should think
about it just as we've had it before,

00:01:00.952 --> 00:01:05.372
that this is fish, people,

00:01:05.372 --> 00:01:09.241
fish, tanks.

00:01:10.570 --> 00:01:15.550
And so, this is the first
diagonal of the single words.

00:01:15.550 --> 00:01:18.410
This is the second diagonal
of the pairs of words.

00:01:18.410 --> 00:01:21.980
The triples of words, and
the four word constituents.

00:01:23.580 --> 00:01:25.860
Okay, so what do we need to get going?

00:01:25.860 --> 00:01:29.640
We have our sentence to parse,
fish, people, fish, tanks.

00:01:29.640 --> 00:01:31.800
The second thing that
we need is the grammar.

00:01:31.800 --> 00:01:37.280
And so, then, once we've done
that we can start doing things.

00:01:37.280 --> 00:01:42.260
So in particular, what we're going to do
is start filling in the lexical entries.

00:01:42.260 --> 00:01:46.711
So, we start with the cell here and
we say,

00:01:46.711 --> 00:01:51.668
okay the word fish,
that can be a noun or a verb.

00:01:51.668 --> 00:01:59.708
And so, we put in that we can make
a noun from fish with probability 0.2.

00:01:59.708 --> 00:02:04.008
And we can make a verb from
fish with probability 0.6.

00:02:04.008 --> 00:02:07.788
And then, we keep on doing this for
the other cells along the diagonal.

00:02:07.788 --> 00:02:12.120
So people can be a noun
with probability 0.5,

00:02:12.120 --> 00:02:16.568
and people can be a verb
with probability 0.1.

00:02:16.568 --> 00:02:19.528
And we keep on going.

00:02:19.528 --> 00:02:21.088
And this is what we get.

00:02:21.088 --> 00:02:28.880
Okay, but now, our grandma also has
unaries that rewrite to categories.

00:02:28.880 --> 00:02:32.380
So, we also then,
have to apply the unary rules.

00:02:32.380 --> 00:02:35.100
And so, the way we'll do that is, for

00:02:35.100 --> 00:02:40.680
each cell we'll find
unary rules that apply,

00:02:40.680 --> 00:02:45.600
and if they create a category that
isn't there before, or one with

00:02:45.600 --> 00:02:50.520
higher probability than what was there
before, then we'll put it into our chart.

00:02:51.740 --> 00:02:55.700
And in this case,
the relevant unary rules here,

00:02:55.700 --> 00:03:01.030
we've got one other nary rule
over here actually, are all

00:03:01.030 --> 00:03:06.110
creating different categories, so
we'll be adding new things to the chart.

00:03:06.110 --> 00:03:11.010
So we'll say, look, we can also make a VP

00:03:11.010 --> 00:03:15.640
here which has probability 0.06.

00:03:15.640 --> 00:03:23.140
So there, I'm taking the 0.1 and
the 0.6 and multiplying it.

00:03:23.140 --> 00:03:29.316
We can make an NP where the probability

00:03:29.316 --> 00:03:36.460
of that is 0.7 times 0.2, 0.14.

00:03:36.460 --> 00:03:40.520
And in the first round through,
that's all we'll do.

00:03:40.520 --> 00:03:47.427
But after we've been through all
of the rules for non-terminals,

00:03:47.427 --> 00:03:52.650
we then say well,
we have added some new things.

00:03:52.650 --> 00:03:57.248
So added is true, and so,
we'll do this whole while loop once more.

00:03:57.248 --> 00:04:01.716
And we need to do that, so
we also discover that we can apply

00:04:01.716 --> 00:04:06.200
a second layer of unary roles and
build an S over this span.

00:04:06.200 --> 00:04:08.280
So, we'll also build an S.

00:04:08.280 --> 00:04:12.253
And the probability of
that will be 0.1 times

00:04:12.253 --> 00:04:16.960
the probability of the VP,
so that'll be 0.006.

00:04:16.960 --> 00:04:21.532
Okay, and so
then we're going to apply the unary

00:04:21.532 --> 00:04:25.558
rules down the other cells of the lexicon.

00:04:25.558 --> 00:04:30.407
So at this point, we're ready to start
doing the heart of the CYK algorithm,

00:04:30.407 --> 00:04:33.690
which is building constituents
over bigger spans,

00:04:33.690 --> 00:04:39.530
first applying binary rules and then we'll
do the unaries again on top of them.

00:04:39.530 --> 00:04:45.065
Okay, so at this point, the cell that
we next want to fill is this one.

00:04:45.065 --> 00:04:51.273
So, this is the cell that's covering
from words, positions, 0 to 2.

00:04:51.273 --> 00:04:54.807
So, this version of the algorithm
I've written using fencepost,

00:04:54.807 --> 00:04:59.575
even though the particular way I'm doing
it, there aren't any empty elements.

00:04:59.575 --> 00:05:04.899
Okay, and so to build a binary
constituent out of this, the only way to

00:05:04.899 --> 00:05:10.148
do it is to build it something from
0 to 1 and something from 1 to 2.

00:05:10.148 --> 00:05:13.676
All the things from 0 to 1
are contained in this cell, and

00:05:13.676 --> 00:05:16.778
the things from 1 to 2
are contained in this cell.

00:05:16.778 --> 00:05:21.815
And so, what we're going to do is
consider ways of combining one of

00:05:21.815 --> 00:05:27.226
each of those to make some other
constituent which will be licensed,

00:05:27.226 --> 00:05:31.332
providing there's a rule
in the grammar over here,

00:05:31.332 --> 00:05:36.590
of x goes to yz, where y is something
here and z is something there.

00:05:38.170 --> 00:05:40.470
So, what of that sort can we do?

00:05:40.470 --> 00:05:45.317
Well, there are no binary
rules that have an N

00:05:45.317 --> 00:05:50.176
on the right-hand side, only unary rules.

00:05:50.176 --> 00:05:52.470
So, we won't be able to
do anything with the N.

00:05:52.470 --> 00:05:58.065
If we look at this V here,
that could be made with that that rule.

00:05:58.065 --> 00:06:00.015
So, that's something that we can make.

00:06:00.015 --> 00:06:05.735
So look, we've got a VP goes to VNP.

00:06:05.735 --> 00:06:10.350
And so,
that means we can make a VP in this cell.

00:06:10.350 --> 00:06:14.731
And the probability of
it will be 0.6 times

00:06:14.731 --> 00:06:19.238
0.35 times the probability of this rule.

00:06:19.238 --> 00:06:20.153
And at this point,

00:06:20.153 --> 00:06:23.318
you're starting to stretch my
ability to do mental arithmetic.

00:06:23.318 --> 00:06:29.521
So, that's 0.3 times 0.35.

00:06:32.741 --> 00:06:40.101
So, that's 5 carry the 1, so 0.105.

00:06:44.441 --> 00:06:48.801
But then, there are also other things
that we can build with binary rules.

00:06:48.801 --> 00:06:52.441
So what other the binary rules do we have?

00:06:52.441 --> 00:06:55.916
We've got a rule for
S goes to NP VP, and well,

00:06:55.916 --> 00:07:00.374
we can certainly apply that
because we've got an NP here and

00:07:00.374 --> 00:07:04.140
a VP there, and so
we can build an S over this span.

00:07:06.590 --> 00:07:08.188
And similarly, for some other ones.

00:07:08.188 --> 00:07:12.918
So, NP goes to NP NP,
where we've got an NP here and

00:07:12.918 --> 00:07:17.220
an NP there, so
we can build NP over this span.

00:07:18.990 --> 00:07:24.999
I won't try and work out all
the probabilities, but if we do that and

00:07:24.999 --> 00:07:30.808
apply them, we then end up with
all of these probabilities here.

00:07:30.808 --> 00:07:33.089
Now, it turns out that for

00:07:33.089 --> 00:07:38.890
each of the constituents that we
built here in the binary phase.

00:07:38.890 --> 00:07:43.410
There's only one way of making them so
there wasn't any contention.

00:07:43.410 --> 00:07:47.242
But we'll be able to see contention
at the next unary phase.

00:07:47.242 --> 00:07:52.325
And our rule for contention is always,
if we discover multiple ways to

00:07:52.325 --> 00:07:57.339
make a category over a span,
we keep the one of highest probability.

00:07:57.339 --> 00:08:02.750
And so the next phase here we now do is
we do unaries for these cells down here.

00:08:02.750 --> 00:08:07.840
So again, we look for unary rules and
if they give a way of making

00:08:07.840 --> 00:08:12.950
something with higher probability
we put that into the chart and

00:08:12.950 --> 00:08:17.510
then we say we've done some work and
having done some work will lead us to do

00:08:17.510 --> 00:08:22.580
the whole while loop again in case we're
able to build up chains of unary rules.

00:08:22.580 --> 00:08:27.201
So in this particular case,
there are no unary

00:08:27.201 --> 00:08:32.190
rules that have NP on the right hand side,
so we can't do anything there.

00:08:32.190 --> 00:08:36.600
But there is a unary rule that has
VP on the right hand side, and so

00:08:36.600 --> 00:08:41.490
we discover that there's another way
that we can make an S where we make

00:08:41.490 --> 00:08:45.660
an S goes to VP.

00:08:45.660 --> 00:08:50.959
And while the probability
of that is actually going

00:08:50.959 --> 00:08:56.874
to be 0.105 times 0.1, which is 0.0105,

00:08:56.874 --> 00:09:03.910
which is actually a lot more than
the probability of this role.

00:09:03.910 --> 00:09:11.265
So we're going to record a better way
of making S in our back pointers,

00:09:11.265 --> 00:09:16.625
and we're going to record the probability
of that new best way of making it.

00:09:16.625 --> 00:09:20.325
We always just keep what constituents

00:09:20.325 --> 00:09:25.445
we can make the best probability
way of making them, and

00:09:25.445 --> 00:09:30.435
if we're store in that pointers, the way
that was the best way of making it.

00:09:31.970 --> 00:09:36.720
So if we go through all the cells and
see if we can make them in better

00:09:36.720 --> 00:09:41.920
ways with unary rules, we find that
that's possible in precisely two places.

00:09:41.920 --> 00:09:46.280
This one and also over here we
find a better way of making an S.

00:09:46.280 --> 00:09:51.590
And so we update those two and
this is now the second row.

00:09:51.590 --> 00:09:56.070
Okay, so
now we're going to go onto the third row

00:09:56.070 --> 00:09:58.770
where we're building
three word constituents.

00:09:58.770 --> 00:10:04.720
So this is the fish people fish cell and
this is the people fish tank cell.

00:10:04.720 --> 00:10:08.520
So at this point things get
a little bit more interesting for

00:10:08.520 --> 00:10:10.760
building the binary constituents.

00:10:10.760 --> 00:10:14.840
So when we're going to
build things in this cell

00:10:14.840 --> 00:10:17.190
which are things from here to here.

00:10:17.190 --> 00:10:21.050
Well, we're going to build
binary constituents but

00:10:21.050 --> 00:10:23.160
there are two ways that we can do it.

00:10:23.160 --> 00:10:26.850
We can either take something from here,

00:10:26.850 --> 00:10:31.200
from zero to two and combined it
with something from two to three.

00:10:31.200 --> 00:10:35.000
Or else we can take something
from zero to one and

00:10:35.000 --> 00:10:36.940
combined it with something
from one to three.

00:10:36.940 --> 00:10:42.070
And that's what we're doing in this part
of algorithm here, we choose a split

00:10:42.070 --> 00:10:46.940
point, for
dividing the constituent into two.

00:10:46.940 --> 00:10:53.035
This is where we exploited the only binary
rule to get the cubic kind algorithm.

00:10:53.035 --> 00:10:58.440
So it iterates across split point
which is another O(n) operation and

00:10:58.440 --> 00:11:04.420
then we consider what rules that
we can apply for each split point.

00:11:04.420 --> 00:11:07.250
And then that part is as we did it before.

00:11:07.250 --> 00:11:11.830
So first off we going to start with
saying okay we're going to combine

00:11:11.830 --> 00:11:17.140
stuff from zero to two that's this
cell with something from two to three,

00:11:17.140 --> 00:11:19.310
that's this cell.

00:11:19.310 --> 00:11:21.660
And so then we'll see what we can build.

00:11:21.660 --> 00:11:25.470
And while we have an NP and an NP and so

00:11:25.470 --> 00:11:29.384
that will allow us to build
a bigger NP according to that rule.

00:11:30.395 --> 00:11:36.705
And we have NP and

00:11:36.705 --> 00:11:41.908
a VP so
that allows to build an S using this rule.

00:11:41.908 --> 00:11:47.080
And we have,

00:11:47.080 --> 00:11:53.250
well it seems like we can't actually build
a VP over that span doing things that way.

00:11:53.250 --> 00:11:58.970
Okay let's then consider the other
possibility where we do this and this.

00:11:58.970 --> 00:12:04.970
Well, this time we can
build an NP by combining

00:12:04.970 --> 00:12:11.030
this NP, and then working with the other
one where we could get this cell.

00:12:11.030 --> 00:12:13.470
So this time we're using these two cells.

00:12:13.470 --> 00:12:18.490
So we can use this NP and this NP
which will allow us to build an NP.

00:12:19.560 --> 00:12:24.820
We can use this verb and this NP,
which will allow us to build a VP, and

00:12:25.840 --> 00:12:30.800
we can use this NP and
this VP which will allow us to build an S.

00:12:30.800 --> 00:12:33.400
And so we can build things with that span.

00:12:33.400 --> 00:12:37.360
And so then what we're going to
want to do is say, okay,

00:12:37.360 --> 00:12:42.728
we can definitely build an NP over this
span, but we want to find out which

00:12:42.728 --> 00:12:48.960
of these two is the highest probability on
of way of making NP and keep only that.

00:12:48.960 --> 00:12:52.620
And similarly we're going to want
to find out which of these two

00:12:52.620 --> 00:12:57.010
is the highest probability way of
making an S and keep only that.

00:12:58.410 --> 00:13:01.220
Now actually if you work
through the math in this case

00:13:01.220 --> 00:13:04.100
there's a little fine point for
the NP case.

00:13:04.100 --> 00:13:10.236
Because if you look at the NP case for
the purple one,

00:13:10.236 --> 00:13:14.340
it's 0.0049 times 0.14 and

00:13:14.340 --> 00:13:17.940
the probability of the NP
rule is a constant 0.1.

00:13:17.940 --> 00:13:22.950
And if you go to the green one,
it's 0.14 here,

00:13:22.950 --> 00:13:27.135
which is the same as there and

00:13:27.135 --> 00:13:32.240
0.0049, which is the same as there.

00:13:32.240 --> 00:13:34.820
Reflecting the fact that
both ways of doing it,

00:13:34.820 --> 00:13:39.420
you're using the word fish twice and
the word people once.

00:13:39.420 --> 00:13:44.160
So actually both ways of making
NP have identical probability.

00:13:44.160 --> 00:13:48.290
So in practice, when you have
ties like this, these parses,

00:13:48.290 --> 00:13:52.390
just choose one analysis,
the first one they come across.

00:13:52.390 --> 00:13:56.780
But sort of you can just say,
they choose one analysis randomly.

00:13:57.860 --> 00:14:03.670
Okay so that then fills in that cell and
we get these numbers,

00:14:03.670 --> 00:14:09.690
and then at that point,
we would again apply unary rules.

00:14:09.690 --> 00:14:14.090
So the only unary rules that's
active at this level is this one.

00:14:14.090 --> 00:14:18.010
because the other two unary
rules only work on N and V and

00:14:18.010 --> 00:14:22.390
so aren't applicable in a cell like this,
in this little grammar.

00:14:22.390 --> 00:14:29.445
So we'd also find a new way of making
an S by making it from a VP but

00:14:29.445 --> 00:14:35.584
it's probability would be
0.1 times this number.

00:14:35.584 --> 00:14:38.122
So it'd be 0.000147,

00:14:38.122 --> 00:14:43.480
which is less than the way we've
already discovered of making an S so

00:14:43.480 --> 00:14:48.630
we'll keep this as the highest
probability analysis.

00:14:48.630 --> 00:14:55.950
Okay, so then we do the cell here,
the one, the four cell.

00:14:55.950 --> 00:14:59.950
And so again, there are two split
points of ways of making it up.

00:14:59.950 --> 00:15:07.195
We can either make something from
one to two and then three to four.

00:15:07.195 --> 00:15:12.053
Or else we can make something
from one to three and

00:15:12.053 --> 00:15:17.149
then from three to four,
and so we explore all those

00:15:17.149 --> 00:15:22.143
ways of combining things,
and fill in this cell.

00:15:25.701 --> 00:15:28.445
Okay, now we're almost at the end.

00:15:28.445 --> 00:15:32.477
We just have to fill in
the final cell of the chart.

00:15:32.477 --> 00:15:37.097
And it's the same thing apart
from now when we iterate

00:15:37.097 --> 00:15:40.667
across split points there
are three ways to do it.

00:15:40.667 --> 00:15:46.300
So you can make things to
put in here either by taking

00:15:46.300 --> 00:15:51.551
things from zero to one
followed by two to four.

00:15:51.551 --> 00:15:58.850
Or you can have things
that are from zero to two.

00:16:00.850 --> 00:16:03.896
Plus things from 2 to 4.

00:16:03.896 --> 00:16:09.746
Or you can have things that are from

00:16:09.746 --> 00:16:15.409
0 to 3 plus things from 3 to 4.

00:16:15.409 --> 00:16:20.192
And so we explore all the ways
of combining things, and again,

00:16:20.192 --> 00:16:25.787
choose the highest probability way of
making each of a noun phrase, an S,

00:16:25.787 --> 00:16:31.945
and a VP, which are the three constituent
types that we can build over that span.

00:16:31.945 --> 00:16:34.675
Now, by the time we've gone this far up,

00:16:34.675 --> 00:16:39.364
the method is much too difficult for
me to do in real time in front of you.

00:16:39.364 --> 00:16:44.530
But I've worked it all out in advance and
if we fill it out, this is what we get.

00:16:45.970 --> 00:16:51.140
So what we get here is
that we can't just ask

00:16:51.140 --> 00:16:56.690
the question of what's the highest
probability parse of this sentence,

00:16:56.690 --> 00:16:59.560
regardless of what category you choose for
it.

00:16:59.560 --> 00:17:04.500
And the answer to that is that
is parsing it as a sentence.

00:17:04.500 --> 00:17:08.680
But if you have a nominated
start category like S,

00:17:08.680 --> 00:17:13.360
you can instead say, I just want to
find an analysis as an S, regardless.

00:17:13.360 --> 00:17:16.066
And then that will also
return this analysis.

00:17:16.066 --> 00:17:20.870
Okay, I say we're finished but actually,
well, where is the parse tree?

00:17:20.870 --> 00:17:25.920
And so the answer to the parse tree
is we can find it by now calling this

00:17:25.920 --> 00:17:31.630
build tree routine that traces
backwards through the tree.

00:17:31.630 --> 00:17:36.830
And so we know that the first
thing that we built at the top,

00:17:36.830 --> 00:17:42.471
just taking this starting point,
is it's an S goes to NP, VP.

00:17:42.471 --> 00:17:47.379
And at this point, I have to confess
that I actually left a little bit out of

00:17:47.379 --> 00:17:51.752
what's written in the table just
to keep things written larger.

00:17:51.752 --> 00:17:55.280
But rather than simply writing
the rule that you used,

00:17:55.280 --> 00:17:59.036
you'll actually record which
cells you built it from, so

00:17:59.036 --> 00:18:02.590
that these are actually
constituents over spans.

00:18:02.590 --> 00:18:07.070
So this is actually a noun phrase
that was built over 0 to 2,

00:18:07.070 --> 00:18:11.321
followed by a verb phrase
that was built over 2 to 4.

00:18:12.910 --> 00:18:21.460
Okay, so that means we now look in the 0
to 2 cell to find the noun phrase.

00:18:21.460 --> 00:18:27.450
We look in the 2 to 4 cell
to find the verb phrase.

00:18:29.610 --> 00:18:33.790
And at that point, we'll start to, so

00:18:33.790 --> 00:18:37.872
this is 0 to 4, 0 to 2, 2 to 4, and

00:18:37.872 --> 00:18:43.250
at this point we start
to recurse downwards.

00:18:43.250 --> 00:18:48.300
So the highest probability way of
building a noun phrase was using

00:18:48.300 --> 00:18:51.615
the noun phrase goes to noun
phrase noun phrase rule.

00:18:53.190 --> 00:18:55.771
And since that's a binary rule,

00:18:55.771 --> 00:19:00.667
we then necessarily know that
that had to be 0,1 and 1 to 2.

00:19:00.667 --> 00:19:07.817
And the highest way of making a verb
phrase is using the verb noun phrase rule,

00:19:07.817 --> 00:19:13.112
where this goes from 2 to 3,
and this goes from 3 to 4.

00:19:14.140 --> 00:19:19.355
Okay, so then that means we're building

00:19:19.355 --> 00:19:24.185
this noun phrase as a noun
phrase in this cell and

00:19:24.185 --> 00:19:29.105
we're building this noun phrase
as a noun phrase in that cell.

00:19:29.105 --> 00:19:34.215
And then over here,
we're building a verb as a verb in this

00:19:34.215 --> 00:19:39.005
cell and we're building the noun
phrase as a noun phrase in this cell.

00:19:40.320 --> 00:19:42.249
So at that point, we can then say well,

00:19:42.249 --> 00:19:45.541
what's the highest way of
building a noun phrase here?

00:19:45.541 --> 00:19:50.120
It's by making it as a noun from 0 to 1.

00:19:50.120 --> 00:19:55.000
Well, what's the highest way
of making a noun over 0 to 1,

00:19:55.000 --> 00:19:57.940
from the same span,
because that was the unary rule.

00:19:57.940 --> 00:20:03.960
Well, it was by realizing it as the word
fish, which was a word in our sentence.

00:20:03.960 --> 00:20:06.811
And now, similarly we do the same for
the other cells.

00:20:06.811 --> 00:20:10.750
Okay, so from 1 to 2,
the way we're building a noun phrase

00:20:10.750 --> 00:20:15.309
with highest probability was building
it from a noun as a unary rule and

00:20:15.309 --> 00:20:19.251
the way of building a noun with
highest probability was using

00:20:19.251 --> 00:20:22.675
the word people that's
a terminal in the sentence.

00:20:24.885 --> 00:20:30.810
The highest probability way of building
a verb from 2 to 3 is directly

00:20:30.810 --> 00:20:37.070
making it from the word fish,
which is a terminal in our sentence.

00:20:37.070 --> 00:20:42.119
And then the highest probability
of way of making a noun phrase

00:20:42.119 --> 00:20:47.535
over 3 to 4 is for making from
a noun from 3 to 4 by unary rule.

00:20:47.535 --> 00:20:51.605
And the highest probability
way of making noun over 3 to

00:20:51.605 --> 00:20:55.856
4 is making it using the word tanks,
which is a terminal.

00:20:55.856 --> 00:21:01.685
So at this point, we've been able to
follow the back traces back out and

00:21:01.685 --> 00:21:07.430
can show you this is the highest
probability parse for this sentence.

00:21:09.920 --> 00:21:12.927
Phew, that was a bit go get through for
me as well as you.

00:21:12.927 --> 00:21:17.324
But I hope you can see it's actually
fairly straightforward as an algorithm and

00:21:17.324 --> 00:21:20.735
it's actually much easier for
computers to do it than it is for

00:21:20.735 --> 00:21:23.440
human beings filling in
squares of a rectangle.

