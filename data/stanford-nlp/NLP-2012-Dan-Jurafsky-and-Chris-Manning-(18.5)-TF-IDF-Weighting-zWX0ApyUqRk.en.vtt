WEBVTT
Kind: captions
Language: en

00:00:00.610 --> 00:00:04.320
We've now introduced two weights for
terms and

00:00:04.320 --> 00:00:09.830
documents to use in our information
retrieval making process.

00:00:09.830 --> 00:00:12.968
Term frequency and
inverse document frequency.

00:00:12.968 --> 00:00:17.937
In this segment we're going to put
them together to get the tf-idf weight

00:00:17.937 --> 00:00:18.668
of terms.

00:00:18.668 --> 00:00:23.287
The tf-idf weight of a term
in a document right here,

00:00:23.287 --> 00:00:28.727
is simply the product of its tf
weight scaled with a log term as we

00:00:28.727 --> 00:00:34.600
discussed before, times its
inverse document frequency weight.

00:00:37.230 --> 00:00:42.090
This is the best known weighting scheme
for terms in information retrieval.

00:00:42.090 --> 00:00:44.697
There's been a lot of research and
there are many others.

00:00:44.697 --> 00:00:47.530
But if you only know one,
it's the one to know.

00:00:47.530 --> 00:00:51.738
Note in particular one fine point,
so this little dash or

00:00:51.738 --> 00:00:58.490
hyphen here in this tf-idf weighting,
that's a hyphen, it's not a minus sign.

00:00:58.490 --> 00:01:03.376
But we're taking a product, so
sometimes people indicate that

00:01:03.376 --> 00:01:08.362
more explicitly by using a dot,
or using a multiplication sign.

00:01:08.362 --> 00:01:11.264
So what are the features
of tf-idf weighting?

00:01:11.264 --> 00:01:17.750
tf-idf weighting increases with the number
of times the term occurs in the document.

00:01:17.750 --> 00:01:20.339
So that the tf-idf weight for

00:01:20.339 --> 00:01:26.000
a query term depends on the document,
it's not independent of the document.

00:01:26.000 --> 00:01:30.940
And then the tf-idf weight for
a term also goes up with

00:01:30.940 --> 00:01:35.100
the rarity of the term in the collection,
that's from the idf weighting here.

00:01:37.360 --> 00:01:40.930
So using this to find
the ranking of documents for

00:01:40.930 --> 00:01:45.490
a query, what we're doing to work out
the score of the query in the document,

00:01:45.490 --> 00:01:49.240
is we're taking the terms that
appear in both the query and

00:01:49.240 --> 00:01:53.240
the document,
the rest of them have no weighting.

00:01:53.240 --> 00:01:57.990
And then we're working out this tf.idf
weight for each of those terms, and

00:01:57.990 --> 00:02:03.050
then we're summing them to give the score
of the document with respect to the query.

00:02:05.070 --> 00:02:06.910
So what have we done here?

00:02:06.910 --> 00:02:12.690
What we've done is we've gradually
moved from first binary vectors

00:02:12.690 --> 00:02:18.770
in the original model of doing
Boolean information retrieval,

00:02:18.770 --> 00:02:25.700
to count vectors, which we used when
we just had an unscaled term frequency.

00:02:25.700 --> 00:02:29.410
To now, we have weight vectors for
a document,

00:02:29.410 --> 00:02:33.320
and hence a weight matrix
between terms and documents.

00:02:33.320 --> 00:02:36.290
And that's now what we see here.

00:02:36.290 --> 00:02:40.580
So each document is now being
represented by a real valued vector.

00:02:40.580 --> 00:02:41.460
So, for example,

00:02:41.460 --> 00:02:46.320
the document Julius Caesar is
being represented by this vector.

00:02:46.320 --> 00:02:51.770
So that for each document, it's in
the vector space of real valued numbers,

00:02:51.770 --> 00:02:57.270
where the dimensionality is the number of
different terms in our collection again.

00:02:58.940 --> 00:03:04.194
Okay, and then when we have a bunch
of these vectors for each document in

00:03:04.194 --> 00:03:10.259
our collection, we have a term document
matrix which is now a real valued matrix.

00:03:10.259 --> 00:03:14.810
We'll say a little bit more later about
what some of the properties of this is.

00:03:14.810 --> 00:03:20.876
But hopefully seeing this kind of term
document matrix of real numbers there's

00:03:20.876 --> 00:03:26.687
enough to see, how we can do a ranking
of documents according to some query.

00:03:26.687 --> 00:03:31.487
According to these tf-idf
scores that we've assigned for

00:03:31.487 --> 00:03:33.890
each term and each document.

00:03:34.908 --> 00:03:36.470
So that's tf-idf weighting,

00:03:36.470 --> 00:03:40.950
one of the most central concepts
in information retrieval systems.

