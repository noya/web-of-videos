WEBVTT
Kind: captions
Language: en
Style:
::cue(c.colorCCCCCC) { color: rgb(204,204,204);
 }
::cue(c.colorE5E5E5) { color: rgb(229,229,229);
 }
##

00:00:08.390 --> 00:00:10.790 align:start position:0%
 
okay<00:00:09.390><c> so</c><00:00:09.450><c> we're</c><00:00:09.750><c> now</c><00:00:09.870><c> going</c><c.colorE5E5E5><00:00:10.080><c> to</c><00:00:10.260><c> switch</c><00:00:10.470><c> to</c></c><c.colorCCCCCC><00:00:10.500><c> the</c></c>

00:00:10.790 --> 00:00:10.800 align:start position:0%
okay so we're now going<c.colorE5E5E5> to switch to</c><c.colorCCCCCC> the
 </c>

00:00:10.800 --> 00:00:13.640 align:start position:0%
okay so we're now going<c.colorE5E5E5> to switch to</c><c.colorCCCCCC> the
next<00:00:11.040><c> topic</c><00:00:11.190><c> inference</c></c><c.colorE5E5E5><00:00:12.139><c> so</c><00:00:13.139><c> the</c><00:00:13.260><c> simplest</c></c>

00:00:13.640 --> 00:00:13.650 align:start position:0%
<c.colorCCCCCC>next topic inference</c><c.colorE5E5E5> so the simplest
 </c>

00:00:13.650 --> 00:00:16.070 align:start position:0%
<c.colorCCCCCC>next topic inference</c><c.colorE5E5E5> so the simplest
form<00:00:13.889><c> of</c><00:00:13.980><c> inference</c><00:00:14.400><c> is</c><00:00:14.580><c> using</c><00:00:15.120><c> method</c><00:00:15.870><c> called</c></c>

00:00:16.070 --> 00:00:16.080 align:start position:0%
form of inference is using method called
 

00:00:16.080 --> 00:00:18.440 align:start position:0%
form of inference is using method called
modus<00:00:16.470><c> ponens</c><c.colorCCCCCC><00:00:16.560><c> the</c><00:00:17.490><c> way</c><00:00:17.640><c> it</c><00:00:17.730><c> works</c><00:00:17.939><c> is</c><00:00:18.119><c> that</c></c><c.colorE5E5E5><00:00:18.240><c> if</c></c>

00:00:18.440 --> 00:00:18.450 align:start position:0%
modus ponens<c.colorCCCCCC> the way it works is that</c><c.colorE5E5E5> if
 </c>

00:00:18.450 --> 00:00:21.290 align:start position:0%
modus ponens<c.colorCCCCCC> the way it works is that</c><c.colorE5E5E5> if
you<00:00:18.540><c> have</c><00:00:18.750><c> a</c><00:00:19.230><c> statement</c><00:00:20.040><c> let's</c><00:00:20.310><c> say</c><00:00:20.460><c> alpha</c></c><c.colorCCCCCC><00:00:20.700><c> and</c></c>

00:00:21.290 --> 00:00:21.300 align:start position:0%
you have a<c.colorE5E5E5> statement let's say alpha</c><c.colorCCCCCC> and
 </c>

00:00:21.300 --> 00:00:23.810 align:start position:0%
you have a<c.colorE5E5E5> statement let's say alpha</c><c.colorCCCCCC> and
we<00:00:21.990><c> also</c><00:00:22.170><c> know</c><00:00:22.439><c> that</c></c><c.colorE5E5E5><00:00:22.470><c> alpha</c><00:00:22.920><c> umpires</c><00:00:23.460><c> better</c></c>

00:00:23.810 --> 00:00:23.820 align:start position:0%
we also know that<c.colorE5E5E5> alpha umpires better
 </c>

00:00:23.820 --> 00:00:27.320 align:start position:0%
we also know that<c.colorE5E5E5> alpha umpires better</c>
<c.colorE5E5E5>you<00:00:24.720><c> can</c><00:00:24.900><c> infer</c></c><c.colorCCCCCC><00:00:25.260><c> it</c><00:00:25.380><c> it</c><00:00:25.500><c> better</c></c><c.colorE5E5E5><00:00:25.710><c> is</c><00:00:25.949><c> true</c><00:00:26.330><c> so</c></c>

00:00:27.320 --> 00:00:27.330 align:start position:0%
<c.colorE5E5E5>you can infer</c><c.colorCCCCCC> it it better</c><c.colorE5E5E5> is true so
 </c>

00:00:27.330 --> 00:00:29.500 align:start position:0%
<c.colorE5E5E5>you can infer</c><c.colorCCCCCC> it it better</c><c.colorE5E5E5> is true so
here's<00:00:27.539><c> an</c><00:00:27.660><c> example</c><00:00:27.890><c> if</c></c><c.colorCCCCCC><00:00:28.890><c> we</c><00:00:29.130><c> know</c><00:00:29.310><c> that</c></c>

00:00:29.500 --> 00:00:29.510 align:start position:0%
here's an example<c.colorE5E5E5> if</c><c.colorCCCCCC> we know that
 </c>

00:00:29.510 --> 00:00:32.330 align:start position:0%
here's an example<c.colorE5E5E5> if</c><c.colorCCCCCC> we know that
marking<00:00:30.510><c> is</c><00:00:30.660><c> a</c><00:00:30.689><c> cat</c><00:00:30.960><c> and</c><00:00:31.320><c> we</c><00:00:31.710><c> know</c><00:00:31.890><c> that</c></c><c.colorE5E5E5><00:00:32.099><c> for</c></c>

00:00:32.330 --> 00:00:32.340 align:start position:0%
marking is a cat and we know that<c.colorE5E5E5> for
 </c>

00:00:32.340 --> 00:00:36.259 align:start position:0%
marking is a cat and we know that<c.colorE5E5E5> for
all<00:00:32.369><c> X</c><00:00:32.699><c> cat</c><00:00:33.690><c> is</c><00:00:33.870><c> of</c><00:00:33.960><c> X</c><00:00:34.199><c> implies</c><00:00:34.559><c> each</c><00:00:35.129><c> fish</c><00:00:35.430><c> X</c><00:00:35.670><c> we</c></c>

00:00:36.259 --> 00:00:36.269 align:start position:0%
all<c.colorE5E5E5> X cat is of X implies each fish X we
 </c>

00:00:36.269 --> 00:00:38.689 align:start position:0%
all<c.colorE5E5E5> X cat is of X implies each fish X we
can<00:00:36.390><c> infer</c><00:00:36.780><c> from</c><00:00:36.809><c> this</c><00:00:37.140><c> that</c><00:00:37.519><c> Martin</c><00:00:38.519><c> eats</c></c>

00:00:38.689 --> 00:00:38.699 align:start position:0%
can infer from this that<c.colorE5E5E5> Martin eats
 </c>

00:00:38.699 --> 00:00:42.229 align:start position:0%
can infer from this that<c.colorE5E5E5> Martin eats
fish<00:00:40.159><c> so</c><00:00:41.159><c> influence</c><00:00:41.550><c> can</c></c><c.colorCCCCCC><00:00:41.699><c> be</c><00:00:41.820><c> done</c><00:00:42.000><c> in</c><00:00:42.150><c> many</c></c>

00:00:42.229 --> 00:00:42.239 align:start position:0%
fish so<c.colorE5E5E5> influence can</c><c.colorCCCCCC> be done in many
 </c>

00:00:42.239 --> 00:00:44.270 align:start position:0%
fish so<c.colorE5E5E5> influence can</c><c.colorCCCCCC> be done in many
different<00:00:42.390><c> ways</c></c><c.colorE5E5E5><00:00:42.870><c> you</c><00:00:43.350><c> can</c><00:00:43.530><c> use</c><00:00:43.589><c> forward</c></c>

00:00:44.270 --> 00:00:44.280 align:start position:0%
different<c.colorCCCCCC> ways</c><c.colorE5E5E5> you can use forward
 </c>

00:00:44.280 --> 00:00:46.340 align:start position:0%
different<c.colorCCCCCC> ways</c><c.colorE5E5E5> you can use forward
chaining<00:00:44.610><c> that's</c><00:00:44.909><c> when</c><00:00:45.180><c> individual</c><00:00:45.989><c> facts</c></c>

00:00:46.340 --> 00:00:46.350 align:start position:0%
chaining that's when individual facts
 

00:00:46.350 --> 00:00:47.990 align:start position:0%
chaining that's when individual facts
are<00:00:46.440><c> added</c><00:00:46.739><c> to</c><00:00:46.860><c> the</c><00:00:46.949><c> knowledge</c><c.colorCCCCCC><00:00:47.159><c> base</c><00:00:47.549><c> and</c><00:00:47.850><c> then</c></c>

00:00:47.990 --> 00:00:48.000 align:start position:0%
are added to the knowledge<c.colorCCCCCC> base and then
 </c>

00:00:48.000 --> 00:00:49.850 align:start position:0%
are added to the knowledge<c.colorCCCCCC> base and then</c>
<c.colorE5E5E5>you<00:00:48.150><c> derive</c><00:00:48.510><c> all</c><00:00:48.750><c> the</c><00:00:48.870><c> possible</c><00:00:49.290><c> influences</c></c>

00:00:49.850 --> 00:00:49.860 align:start position:0%
<c.colorE5E5E5>you derive all the possible influences
 </c>

00:00:49.860 --> 00:00:52.100 align:start position:0%
<c.colorE5E5E5>you derive all the possible influences
that<00:00:50.010><c> follow</c><00:00:50.729><c> from</c><00:00:50.850><c> those</c><00:00:51.210><c> individual</c><00:00:51.750><c> facts</c></c>

00:00:52.100 --> 00:00:52.110 align:start position:0%
that follow from<c.colorE5E5E5> those individual facts
 </c>

00:00:52.110 --> 00:00:54.680 align:start position:0%
that follow from<c.colorE5E5E5> those individual facts
then<00:00:52.890><c> you</c><00:00:53.010><c> can</c><00:00:53.159><c> also</c><00:00:53.339><c> use</c></c><c.colorCCCCCC><00:00:53.519><c> backward</c></c><c.colorE5E5E5><00:00:54.150><c> chaining</c></c>

00:00:54.680 --> 00:00:54.690 align:start position:0%
then you can also use<c.colorCCCCCC> backward</c><c.colorE5E5E5> chaining
 </c>

00:00:54.690 --> 00:00:56.390 align:start position:0%
then you can also use<c.colorCCCCCC> backward</c><c.colorE5E5E5> chaining
that's<00:00:55.049><c> when</c><00:00:55.260><c> you</c><00:00:55.350><c> start</c><00:00:55.650><c> from</c><00:00:55.769><c> a</c><00:00:55.920><c> query</c><00:00:56.159><c> for</c></c>

00:00:56.390 --> 00:00:56.400 align:start position:0%
that's when you start from<c.colorE5E5E5> a query for
 </c>

00:00:56.400 --> 00:00:58.250 align:start position:0%
that's when you start from<c.colorE5E5E5> a query for</c>
<c.colorCCCCCC>that<00:00:56.460><c> you</c></c><c.colorE5E5E5><00:00:56.640><c> want</c><00:00:56.760><c> to</c><00:00:56.850><c> find</c><00:00:57.089><c> out</c><00:00:57.269><c> if</c><00:00:57.479><c> a</c><00:00:57.839><c> certain</c></c>

00:00:58.250 --> 00:00:58.260 align:start position:0%
<c.colorCCCCCC>that you</c><c.colorE5E5E5> want to find out if a certain
 </c>

00:00:58.260 --> 00:01:00.950 align:start position:0%
<c.colorCCCCCC>that you</c><c.colorE5E5E5> want to find out if a certain
statement<00:00:58.710><c> is</c><00:00:59.010><c> true</c><00:00:59.220><c> and</c><00:00:59.549><c> then</c><00:01:00.059><c> to</c><00:01:00.720><c> figure</c></c>

00:01:00.950 --> 00:01:00.960 align:start position:0%
statement<c.colorE5E5E5> is true and then to figure
 </c>

00:01:00.960 --> 00:01:02.450 align:start position:0%
statement<c.colorE5E5E5> is true and then to figure
this<00:01:01.110><c> out</c><00:01:01.290><c> you</c></c><c.colorCCCCCC><00:01:01.500><c> have</c><00:01:01.680><c> to</c><00:01:01.830><c> go</c><00:01:01.979><c> back</c><00:01:02.190><c> to</c><00:01:02.339><c> the</c></c>

00:01:02.450 --> 00:01:02.460 align:start position:0%
this out you<c.colorCCCCCC> have to go back to the
 </c>

00:01:02.460 --> 00:01:04.189 align:start position:0%
this out you<c.colorCCCCCC> have to go back to the
database<00:01:02.640><c> and</c><00:01:03.180><c> find</c><00:01:03.239><c> the</c><00:01:03.659><c> statements</c><00:01:04.170><c> that</c></c>

00:01:04.189 --> 00:01:04.199 align:start position:0%
database<c.colorCCCCCC> and find the statements that
 </c>

00:01:04.199 --> 00:01:06.440 align:start position:0%
database<c.colorCCCCCC> and find the statements that
have<00:01:04.559><c> to</c><00:01:04.769><c> be</c></c><c.colorE5E5E5><00:01:04.890><c> true</c><00:01:05.190><c> in</c><00:01:05.489><c> order</c><00:01:05.640><c> for</c><00:01:06.000><c> your</c><00:01:06.150><c> query</c></c>

00:01:06.440 --> 00:01:06.450 align:start position:0%
have to<c.colorCCCCCC> be</c><c.colorE5E5E5> true in order for your query
 </c>

00:01:06.450 --> 00:01:08.510 align:start position:0%
have to<c.colorCCCCCC> be</c><c.colorE5E5E5> true in order for your query
to<00:01:06.690><c> be</c><00:01:06.810><c> true</c><00:01:07.049><c> and</c></c><c.colorCCCCCC><00:01:07.260><c> so</c><00:01:07.500><c> on</c><00:01:07.680><c> recursively</c><00:01:08.340><c> until</c></c>

00:01:08.510 --> 00:01:08.520 align:start position:0%
to be true<c.colorE5E5E5> and</c><c.colorCCCCCC> so on recursively until
 </c>

00:01:08.520 --> 00:01:11.090 align:start position:0%
to be true<c.colorE5E5E5> and</c><c.colorCCCCCC> so on recursively until</c>
<c.colorE5E5E5>you<00:01:08.790><c> of</c><00:01:08.880><c> each</c><00:01:09.320><c> statements</c><00:01:10.320><c> whose</c><00:01:10.500><c> Tools</c></c>

00:01:11.090 --> 00:01:11.100 align:start position:0%
<c.colorE5E5E5>you of each statements whose Tools
 </c>

00:01:11.100 --> 00:01:13.849 align:start position:0%
<c.colorE5E5E5>you of each statements whose Tools
values<00:01:11.520><c> are</c><00:01:11.670><c> known</c><00:01:11.850><c> so</c><00:01:12.439><c> backward</c><00:01:13.439><c> chaining</c><00:01:13.649><c> is</c></c>

00:01:13.849 --> 00:01:13.859 align:start position:0%
values are known<c.colorE5E5E5> so backward chaining is
 </c>

00:01:13.859 --> 00:01:15.980 align:start position:0%
values are known<c.colorE5E5E5> so backward chaining is
implemented</c><c.colorCCCCCC><00:01:14.399><c> for</c><00:01:14.549><c> example</c><00:01:15.030><c> natively</c><00:01:15.719><c> in</c><00:01:15.930><c> the</c></c>

00:01:15.980 --> 00:01:15.990 align:start position:0%
implemented<c.colorCCCCCC> for example natively in the
 </c>

00:01:15.990 --> 00:01:18.260 align:start position:0%
implemented<c.colorCCCCCC> for example natively in the</c>
<c.colorE5E5E5>prologue<00:01:16.320><c> programming</c><00:01:17.039><c> language</c><00:01:17.430><c> so</c><00:01:18.030><c> just</c></c>

00:01:18.260 --> 00:01:18.270 align:start position:0%
<c.colorE5E5E5>prologue programming language so just
 </c>

00:01:18.270 --> 00:01:20.959 align:start position:0%
<c.colorE5E5E5>prologue programming language so just
show<00:01:18.630><c> you</c><00:01:18.689><c> a</c><00:01:18.780><c> brief</c></c><c.colorCCCCCC><00:01:19.079><c> example</c><00:01:19.649><c> of</c><00:01:19.680><c> Prolog</c><00:01:20.130><c> in</c></c>

00:01:20.959 --> 00:01:20.969 align:start position:0%
show you a brief<c.colorCCCCCC> example of Prolog in
 </c>

00:01:20.969 --> 00:01:23.169 align:start position:0%
show you a brief<c.colorCCCCCC> example of Prolog in</c>
<c.colorCCCCCC>palo<00:01:21.299><c> you</c><00:01:21.509><c> can</c><00:01:21.689><c> define</c><00:01:22.049><c> the</c><00:01:22.259><c> following</c></c>

00:01:23.169 --> 00:01:23.179 align:start position:0%
<c.colorCCCCCC>palo you can define the following
 </c>

00:01:23.179 --> 00:01:25.249 align:start position:0%
<c.colorCCCCCC>palo you can define the following</c>
<c.colorE5E5E5>influence<00:01:24.179><c> statement</c><00:01:24.689><c> in</c><00:01:24.780><c> the</c><00:01:24.869><c> knowledge</c></c>

00:01:25.249 --> 00:01:25.259 align:start position:0%
<c.colorE5E5E5>influence statement in the knowledge
 </c>

00:01:25.259 --> 00:01:28.490 align:start position:0%
<c.colorE5E5E5>influence statement in the knowledge</c>
<c.colorCCCCCC>base<00:01:25.590><c> so</c><00:01:25.890><c> x</c><00:01:26.609><c> is</c></c><c.colorE5E5E5><00:01:26.789><c> the</c><00:01:26.939><c> father</c><00:01:27.210><c> of</c><00:01:27.359><c> y</c><00:01:27.600><c> means</c><00:01:28.170><c> that</c></c>

00:01:28.490 --> 00:01:28.500 align:start position:0%
<c.colorCCCCCC>base so x is</c><c.colorE5E5E5> the father of y means that
 </c>

00:01:28.500 --> 00:01:31.340 align:start position:0%
<c.colorCCCCCC>base so x is</c><c.colorE5E5E5> the father of y means that
it<00:01:28.979><c> has</c><00:01:29.310><c> to</c><00:01:29.490><c> be</c><00:01:29.579><c> true</c><00:01:29.820><c> that</c><00:01:29.850><c> x</c><00:01:30.420><c> is</c><00:01:30.659><c> a</c><00:01:30.689><c> parent</c><00:01:31.229><c> of</c></c>

00:01:31.340 --> 00:01:31.350 align:start position:0%
it has to be<c.colorE5E5E5> true that x is a parent of
 </c>

00:01:31.350 --> 00:01:33.919 align:start position:0%
it has to be<c.colorE5E5E5> true that x is a parent of</c>
<c.colorE5E5E5>Y<00:01:31.560><c> and</c><00:01:31.770><c> that</c><00:01:31.920><c> X</c><00:01:32.159><c> is</c><00:01:32.340><c> male</c><00:01:32.609><c> and</c><00:01:33.030><c> then</c><00:01:33.719><c> if</c><00:01:33.840><c> you</c></c>

00:01:33.919 --> 00:01:33.929 align:start position:0%
<c.colorE5E5E5>Y and that X is male and then if you
 </c>

00:01:33.929 --> 00:01:36.139 align:start position:0%
<c.colorE5E5E5>Y and that X is male and then if you
have<00:01:34.079><c> the</c><00:01:34.229><c> following</c><00:01:34.380><c> facts</c></c><c.colorCCCCCC><00:01:34.890><c> john</c><00:01:35.820><c> is</c><00:01:36.000><c> the</c></c>

00:01:36.139 --> 00:01:36.149 align:start position:0%
have the following<c.colorE5E5E5> facts</c><c.colorCCCCCC> john is the
 </c>

00:01:36.149 --> 00:01:38.539 align:start position:0%
have the following<c.colorE5E5E5> facts</c><c.colorCCCCCC> john is the
parent<00:01:36.600><c> of</c><00:01:36.749><c> bill</c><00:01:37.079><c> jane</c><00:01:37.649><c> is</c><00:01:37.829><c> the</c><00:01:38.009><c> parent</c><00:01:38.429><c> of</c></c>

00:01:38.539 --> 00:01:38.549 align:start position:0%
parent of<c.colorCCCCCC> bill jane is the parent of
 </c>

00:01:38.549 --> 00:01:42.169 align:start position:0%
parent of<c.colorCCCCCC> bill jane is the parent of
bill<00:01:38.850><c> jane</c><00:01:39.479><c> is</c><00:01:39.689><c> female</c><00:01:40.079><c> and</c><00:01:40.140><c> john</c><00:01:40.590><c> is</c><00:01:40.770><c> male</c><00:01:41.179><c> all</c></c>

00:01:42.169 --> 00:01:42.179 align:start position:0%
bill jane is female and john is male all
 

00:01:42.179 --> 00:01:43.940 align:start position:0%
bill jane is female and john is male all
<c.colorE5E5E5>this<00:01:42.659><c> in</c><00:01:42.780><c> your</c><00:01:42.929><c> knowledge</c><00:01:43.229><c> base</c><00:01:43.439><c> and</c></c><c.colorCCCCCC><00:01:43.499><c> you</c></c><c.colorE5E5E5><00:01:43.770><c> get</c></c>

00:01:43.940 --> 00:01:43.950 align:start position:0%
<c.colorE5E5E5>this in your knowledge base and</c><c.colorCCCCCC> you</c><c.colorE5E5E5> get
 </c>

00:01:43.950 --> 00:01:46.580 align:start position:0%
<c.colorE5E5E5>this in your knowledge base and</c><c.colorCCCCCC> you</c><c.colorE5E5E5> get
a</c><c.colorCCCCCC><00:01:43.979><c> quicker</c></c><c.colorE5E5E5><00:01:44.340><c> it</c><00:01:44.520><c> says</c><00:01:44.729><c> find</c><00:01:45.179><c> me</c><00:01:45.390><c> an</c><00:01:45.570><c> M</c><00:01:45.869><c> where</c><00:01:46.560><c> m</c></c>

00:01:46.580 --> 00:01:46.590 align:start position:0%
<c.colorE5E5E5>a</c><c.colorCCCCCC> quicker</c><c.colorE5E5E5> it says find me an M where m
 </c>

00:01:46.590 --> 00:01:49.700 align:start position:0%
<c.colorE5E5E5>a</c><c.colorCCCCCC> quicker</c><c.colorE5E5E5> it says find me an M where m
is<00:01:46.829><c> a</c><00:01:47.039><c> person</c><00:01:47.579><c> who's</c></c><c.colorCCCCCC><00:01:47.880><c> the</c><00:01:48.030><c> father</c><00:01:48.299><c> of</c></c><c.colorE5E5E5><00:01:48.450><c> Bill</c></c><c.colorCCCCCC><00:01:48.840><c> so</c></c>

00:01:49.700 --> 00:01:49.710 align:start position:0%
is a person who's<c.colorCCCCCC> the father of</c><c.colorE5E5E5> Bill</c><c.colorCCCCCC> so
 </c>

00:01:49.710 --> 00:01:51.770 align:start position:0%
is a person who's<c.colorCCCCCC> the father of</c><c.colorE5E5E5> Bill</c><c.colorCCCCCC> so</c>
<c.colorE5E5E5>using<00:01:50.219><c> backward</c><00:01:50.490><c> chaining</c><00:01:50.999><c> what</c><00:01:51.359><c> you</c><00:01:51.509><c> need</c><00:01:51.689><c> to</c></c>

00:01:51.770 --> 00:01:51.780 align:start position:0%
<c.colorE5E5E5>using backward chaining what you need to
 </c>

00:01:51.780 --> 00:01:53.450 align:start position:0%
<c.colorE5E5E5>using backward chaining what you need to
do<00:01:51.929><c> is</c><00:01:52.020><c> to</c><00:01:52.170><c> go</c><00:01:52.319><c> to</c><00:01:52.350><c> the</c><00:01:52.619><c> knowledge</c><00:01:52.799><c> base</c><00:01:52.979><c> and</c></c>

00:01:53.450 --> 00:01:53.460 align:start position:0%
do is to go to the knowledge<c.colorE5E5E5> base and
 </c>

00:01:53.460 --> 00:01:56.300 align:start position:0%
do is to go to the knowledge<c.colorE5E5E5> base and
find<00:01:53.729><c> that</c><00:01:53.909><c> in</c><00:01:54.749><c> order</c><00:01:55.109><c> for</c></c><c.colorCCCCCC><00:01:55.140><c> m</c><00:01:55.649><c> to</c><00:01:55.979><c> be</c></c><c.colorE5E5E5><00:01:56.130><c> the</c></c>

00:01:56.300 --> 00:01:56.310 align:start position:0%
find that in<c.colorE5E5E5> order for</c><c.colorCCCCCC> m to be</c><c.colorE5E5E5> the
 </c>

00:01:56.310 --> 00:01:57.700 align:start position:0%
find that in<c.colorE5E5E5> order for</c><c.colorCCCCCC> m to be</c><c.colorE5E5E5> the
father<00:01:56.520><c> of</c></c><c.colorCCCCCC><00:01:56.670><c> Bill</c></c><c.colorE5E5E5><00:01:56.939><c> there</c><00:01:57.270><c> has</c><00:01:57.420><c> to</c><00:01:57.450><c> be</c></c>

00:01:57.700 --> 00:01:57.710 align:start position:0%
father of<c.colorCCCCCC> Bill</c><c.colorE5E5E5> there has to be
 </c>

00:01:57.710 --> 00:02:00.380 align:start position:0%
father of<c.colorCCCCCC> Bill</c><c.colorE5E5E5> there has to be
statements<00:01:58.710><c> with</c><00:01:58.859><c> two</c><00:01:59.159><c> values</c><00:01:59.609><c> which</c><00:02:00.060><c> say</c></c>

00:02:00.380 --> 00:02:00.390 align:start position:0%
statements with two<c.colorE5E5E5> values which say
 </c>

00:02:00.390 --> 00:02:03.559 align:start position:0%
statements with two<c.colorE5E5E5> values which say
that</c><c.colorCCCCCC><00:02:00.420><c> m</c><00:02:01.170><c> is</c><00:02:01.560><c> the</c><00:02:01.619><c> parent</c></c><c.colorE5E5E5><00:02:02.340><c> of</c><00:02:02.520><c> Bill</c><00:02:02.789><c> and</c><00:02:03.030><c> that</c><00:02:03.299><c> M</c></c>

00:02:03.559 --> 00:02:03.569 align:start position:0%
that<c.colorCCCCCC> m is the parent</c><c.colorE5E5E5> of Bill and that M
 </c>

00:02:03.569 --> 00:02:06.620 align:start position:0%
that<c.colorCCCCCC> m is the parent</c><c.colorE5E5E5> of Bill and that M
is<00:02:03.780><c> male</c><00:02:04.429><c> so</c><00:02:05.429><c> going</c><00:02:05.700><c> back</c><00:02:05.909><c> now</c><00:02:06.179><c> we</c><00:02:06.240><c> have</c><00:02:06.479><c> to</c></c>

00:02:06.620 --> 00:02:06.630 align:start position:0%
is male<c.colorE5E5E5> so going back now we have to
 </c>

00:02:06.630 --> 00:02:09.350 align:start position:0%
is male<c.colorE5E5E5> so going back now we have to
find<00:02:06.810><c> statements</c><00:02:07.350><c> about</c></c><c.colorCCCCCC><00:02:07.590><c> m</c><00:02:07.950><c> being</c></c><c.colorE5E5E5><00:02:08.819><c> the</c><00:02:08.970><c> parent</c></c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
find statements about<c.colorCCCCCC> m being</c><c.colorE5E5E5> the parent
 </c>

00:02:09.360 --> 00:02:11.180 align:start position:0%
find statements about<c.colorCCCCCC> m being</c><c.colorE5E5E5> the parent
of<00:02:09.450><c> bill</c><00:02:09.690><c> that</c><00:02:09.899><c> two</c><00:02:10.050><c> possible</c><00:02:10.590><c> instances</c><00:02:11.069><c> of</c></c>

00:02:11.180 --> 00:02:11.190 align:start position:0%
of<c.colorE5E5E5> bill that two possible instances of
 </c>

00:02:11.190 --> 00:02:13.550 align:start position:0%
of<c.colorE5E5E5> bill that two possible instances of
that</c><c.colorCCCCCC><00:02:11.310><c> John</c></c><c.colorE5E5E5><00:02:11.760><c> and</c></c><c.colorCCCCCC><00:02:12.030><c> Jane</c><00:02:12.390><c> and</c><00:02:12.690><c> at</c><00:02:12.930><c> the</c><00:02:13.050><c> same</c></c><c.colorE5E5E5><00:02:13.290><c> time</c></c>

00:02:13.550 --> 00:02:13.560 align:start position:0%
that<c.colorCCCCCC> John</c><c.colorE5E5E5> and</c><c.colorCCCCCC> Jane and at the same</c><c.colorE5E5E5> time
 </c>

00:02:13.560 --> 00:02:16.309 align:start position:0%
that<c.colorCCCCCC> John</c><c.colorE5E5E5> and</c><c.colorCCCCCC> Jane and at the same</c><c.colorE5E5E5> time
we<00:02:13.740><c> want</c><00:02:13.980><c> m</c><00:02:14.190><c> to</c><00:02:14.250><c> be</c><00:02:14.700><c> male</c><00:02:15.030><c> so</c><00:02:15.840><c> there's</c><00:02:16.049><c> only</c><00:02:16.170><c> one</c></c>

00:02:16.309 --> 00:02:16.319 align:start position:0%
we want<c.colorE5E5E5> m to be male so there's only one
 </c>

00:02:16.319 --> 00:02:19.160 align:start position:0%
we want<c.colorE5E5E5> m to be male so there's only one</c>
<c.colorCCCCCC>such<00:02:16.739><c> statement</c><00:02:17.220><c> so</c><00:02:17.340><c> male</c><00:02:17.640><c> john</c><00:02:18.170><c> therefore</c></c>

00:02:19.160 --> 00:02:19.170 align:start position:0%
<c.colorCCCCCC>such statement so male john therefore
 </c>

00:02:19.170 --> 00:02:20.930 align:start position:0%
<c.colorCCCCCC>such statement so male john therefore
the<00:02:19.409><c> only</c></c><c.colorE5E5E5><00:02:19.500><c> combination</c><00:02:19.920><c> of</c><00:02:20.340><c> statements</c><00:02:20.849><c> in</c></c>

00:02:20.930 --> 00:02:20.940 align:start position:0%
the only<c.colorE5E5E5> combination of statements in
 </c>

00:02:20.940 --> 00:02:21.360 align:start position:0%
the only<c.colorE5E5E5> combination of statements in
the<00:02:21.030><c> knowledge</c></c>

00:02:21.360 --> 00:02:21.370 align:start position:0%
the knowledge
 

00:02:21.370 --> 00:02:23.970 align:start position:0%
the knowledge
space<00:02:21.549><c> that</c><00:02:21.790><c> satisfies</c><00:02:22.360><c> the</c><c.colorCCCCCC><00:02:22.599><c> query</c><00:02:22.900><c> is</c><00:02:23.080><c> where</c></c>

00:02:23.970 --> 00:02:23.980 align:start position:0%
space that satisfies the<c.colorCCCCCC> query is where
 </c>

00:02:23.980 --> 00:02:27.390 align:start position:0%
space that satisfies the<c.colorCCCCCC> query is where
John<00:02:24.879><c> is</c><00:02:25.209><c> equal</c><00:02:25.540><c> to</c><00:02:25.659><c> M</c><00:02:25.840><c> which</c></c><c.colorE5E5E5><00:02:26.739><c> is</c><00:02:26.890><c> also</c><00:02:27.069><c> equal</c></c>

00:02:27.390 --> 00:02:27.400 align:start position:0%
John<c.colorCCCCCC> is equal to M which</c><c.colorE5E5E5> is also equal
 </c>

00:02:27.400 --> 00:02:29.520 align:start position:0%
John<c.colorCCCCCC> is equal to M which</c><c.colorE5E5E5> is also equal
to<00:02:27.430><c> X</c><00:02:27.700><c> and</c><00:02:28.120><c> Bill</c><00:02:28.390><c> is</c><00:02:28.510><c> equal</c><00:02:28.840><c> to</c><00:02:29.019><c> Y</c><00:02:29.200><c> and</c></c>

00:02:29.520 --> 00:02:29.530 align:start position:0%
to<c.colorE5E5E5> X and Bill is equal to Y and
 </c>

00:02:29.530 --> 00:02:31.589 align:start position:0%
to<c.colorE5E5E5> X and Bill is equal to Y and</c>
<c.colorE5E5E5>therefore<00:02:30.370><c> we're</c><00:02:30.519><c> going</c><00:02:30.670><c> to</c><00:02:30.760><c> return</c></c><c.colorCCCCCC><00:02:31.209><c> that</c><00:02:31.450><c> the</c></c>

00:02:31.589 --> 00:02:31.599 align:start position:0%
<c.colorE5E5E5>therefore we're going to return</c><c.colorCCCCCC> that the
 </c>

00:02:31.599 --> 00:02:35.850 align:start position:0%
<c.colorE5E5E5>therefore we're going to return</c><c.colorCCCCCC> that the
value<00:02:31.959><c> of</c></c><c.colorE5E5E5><00:02:32.019><c> M</c><00:02:32.260><c> is</c><00:02:32.680><c> equal</c><00:02:33.159><c> to</c><00:02:33.190><c> John</c><00:02:34.260><c> so</c><00:02:35.260><c> let's</c><00:02:35.650><c> see</c></c>

00:02:35.850 --> 00:02:35.860 align:start position:0%
value of<c.colorE5E5E5> M is equal to John so let's see
 </c>

00:02:35.860 --> 00:02:37.589 align:start position:0%
value of<c.colorE5E5E5> M is equal to John so let's see
how<00:02:36.069><c> we</c><00:02:36.129><c> can</c><00:02:36.340><c> use</c><00:02:36.370><c> first-order</c><00:02:36.940><c> logic</c><00:02:37.209><c> for</c></c>

00:02:37.589 --> 00:02:37.599 align:start position:0%
how we can use<c.colorE5E5E5> first-order logic for
 </c>

00:02:37.599 --> 00:02:41.039 align:start position:0%
how we can use<c.colorE5E5E5> first-order logic for
infants<00:02:38.819><c> I'm</c><00:02:39.819><c> going</c><00:02:40.060><c> to</c><00:02:40.150><c> share</c><00:02:40.299><c> the</c><00:02:40.510><c> examples</c></c>

00:02:41.039 --> 00:02:41.049 align:start position:0%
infants I'm going to share<c.colorE5E5E5> the examples
 </c>

00:02:41.049 --> 00:02:43.680 align:start position:0%
infants I'm going to share<c.colorE5E5E5> the examples
from<00:02:41.110><c> the</c><00:02:41.290><c> kinship</c><00:02:41.709><c> domain</c><00:02:42.150><c> the</c><00:02:43.150><c> first</c><00:02:43.390><c> one</c><00:02:43.569><c> is</c></c>

00:02:43.680 --> 00:02:43.690 align:start position:0%
from<c.colorE5E5E5> the kinship domain the first one is
 </c>

00:02:43.690 --> 00:02:45.660 align:start position:0%
from<c.colorE5E5E5> the kinship domain the first one is
to<00:02:43.840><c> represent</c><00:02:44.079><c> the</c><00:02:44.409><c> fact</c><00:02:44.709><c> that</c><00:02:44.829><c> brothers</c><00:02:45.459><c> are</c></c>

00:02:45.660 --> 00:02:45.670 align:start position:0%
to represent<c.colorE5E5E5> the fact that brothers are
 </c>

00:02:45.670 --> 00:02:48.899 align:start position:0%
to represent<c.colorE5E5E5> the fact that brothers are
siblings</c><c.colorCCCCCC><00:02:45.989><c> so</c><00:02:46.989><c> how</c><00:02:47.140><c> do</c><00:02:47.200><c> we</c></c><c.colorE5E5E5><00:02:47.290><c> do</c><00:02:47.470><c> this</c><00:02:47.680><c> well</c><00:02:48.069><c> we</c></c>

00:02:48.899 --> 00:02:48.909 align:start position:0%
siblings<c.colorCCCCCC> so how do we</c><c.colorE5E5E5> do this well we
 </c>

00:02:48.909 --> 00:02:51.420 align:start position:0%
siblings<c.colorCCCCCC> so how do we</c><c.colorE5E5E5> do this well we
said<00:02:49.150><c> it</c><00:02:49.299><c> for</c><00:02:49.480><c> all</c><00:02:49.629><c> x</c><00:02:49.870><c> and</c><00:02:50.079><c> y</c><00:02:50.230><c> if</c></c><c.colorCCCCCC><00:02:50.739><c> X</c><00:02:51.099><c> is</c></c><c.colorE5E5E5><00:02:51.250><c> the</c></c>

00:02:51.420 --> 00:02:51.430 align:start position:0%
said it for all x<c.colorE5E5E5> and y if</c><c.colorCCCCCC> X is</c><c.colorE5E5E5> the
 </c>

00:02:51.430 --> 00:02:53.430 align:start position:0%
said it for all x<c.colorE5E5E5> and y if</c><c.colorCCCCCC> X is</c><c.colorE5E5E5> the
brother<00:02:51.700><c> of</c><00:02:51.849><c> Y</c><00:02:52.060><c> that</c></c><c.colorCCCCCC><00:02:52.090><c> implies</c><00:02:52.720><c> that</c></c><c.colorE5E5E5><00:02:52.750><c> X</c><00:02:53.140><c> is</c><00:02:53.319><c> the</c></c>

00:02:53.430 --> 00:02:53.440 align:start position:0%
brother of<c.colorE5E5E5> Y that</c><c.colorCCCCCC> implies that</c><c.colorE5E5E5> X is the
 </c>

00:02:53.440 --> 00:02:56.400 align:start position:0%
brother of<c.colorE5E5E5> Y that</c><c.colorCCCCCC> implies that</c><c.colorE5E5E5> X is the
sibling<00:02:53.829><c> of</c></c><c.colorCCCCCC><00:02:53.950><c> part</c><00:02:54.750><c> another</c><00:02:55.750><c> statement</c></c><c.colorE5E5E5><00:02:56.140><c> is</c></c>

00:02:56.400 --> 00:02:56.410 align:start position:0%
sibling of<c.colorCCCCCC> part another statement</c><c.colorE5E5E5> is
 </c>

00:02:56.410 --> 00:03:00.089 align:start position:0%
sibling of<c.colorCCCCCC> part another statement</c><c.colorE5E5E5> is
once<00:02:56.739><c> mother</c><00:02:57.129><c> is</c><00:02:57.519><c> once</c><00:02:57.790><c> female</c><00:02:58.269><c> parent</c><00:02:59.099><c> again</c></c>

00:03:00.089 --> 00:03:00.099 align:start position:0%
once mother<c.colorE5E5E5> is once female parent again
 </c>

00:03:00.099 --> 00:03:02.550 align:start position:0%
once mother<c.colorE5E5E5> is once female parent again
we<00:03:00.250><c> can</c><00:03:00.400><c> define</c><00:03:00.670><c> this</c><00:03:00.819><c> by</c><00:03:01.180><c> saying</c><00:03:01.450><c> there</c><00:03:01.750><c> for</c></c>

00:03:02.550 --> 00:03:02.560 align:start position:0%
we can define this by saying there for
 

00:03:02.560 --> 00:03:06.930 align:start position:0%
we can define this by saying there for
all<c.colorE5E5E5><00:03:02.739><c> M</c><00:03:03.129><c> and</c><00:03:03.519><c> C</c><00:03:04.150><c> like</c><00:03:04.420><c> mother</c><00:03:04.720><c> and</c><00:03:04.989><c> child</c><00:03:05.549><c> if</c><00:03:06.549><c> the</c></c>

00:03:06.930 --> 00:03:06.940 align:start position:0%
all<c.colorE5E5E5> M and C like mother and child if the
 </c>

00:03:06.940 --> 00:03:10.770 align:start position:0%
all<c.colorE5E5E5> M and C like mother and child if the
mother<00:03:07.209><c> is</c><00:03:07.930><c> M</c><00:03:08.739><c> matter</c><00:03:09.640><c> of</c><00:03:09.790><c> C's</c><00:03:10.030><c> em</c><00:03:10.329><c> that</c><00:03:10.629><c> I'm</c></c>

00:03:10.770 --> 00:03:10.780 align:start position:0%
mother is M matter of C's<c.colorE5E5E5> em that I'm
 </c>

00:03:10.780 --> 00:03:13.619 align:start position:0%
mother is M matter of C's<c.colorE5E5E5> em that I'm
the<00:03:11.109><c> same</c><00:03:11.349><c> as</c><00:03:11.620><c> M</c><00:03:12.010><c> is</c><00:03:12.340><c> female</c><00:03:12.760><c> and</c><00:03:13.120><c> M</c><00:03:13.390><c> is</c><00:03:13.599><c> the</c></c>

00:03:13.619 --> 00:03:13.629 align:start position:0%
the same<c.colorE5E5E5> as M is female and M is the
 </c>

00:03:13.629 --> 00:03:16.710 align:start position:0%
the same<c.colorE5E5E5> as M is female and M is the</c>
<c.colorE5E5E5>parent<00:03:14.170><c> of</c><00:03:14.319><c> C</c><00:03:14.530><c> and</c><00:03:15.280><c> finally</c><00:03:15.519><c> we</c><00:03:16.239><c> won't</c><00:03:16.480><c> be</c><00:03:16.599><c> able</c></c>

00:03:16.710 --> 00:03:16.720 align:start position:0%
<c.colorE5E5E5>parent of C and finally we won't be able
 </c>

00:03:16.720 --> 00:03:18.330 align:start position:0%
<c.colorE5E5E5>parent of C and finally we won't be able</c>
<c.colorE5E5E5>to</c><c.colorCCCCCC><00:03:16.810><c> represent</c></c><c.colorE5E5E5><00:03:17.230><c> the</c><00:03:17.290><c> fact</c><00:03:17.500><c> that</c><00:03:17.590><c> the</c><00:03:18.069><c> sibling</c></c>

00:03:18.330 --> 00:03:18.340 align:start position:0%
<c.colorE5E5E5>to</c><c.colorCCCCCC> represent</c><c.colorE5E5E5> the fact that the sibling
 </c>

00:03:18.340 --> 00:03:21.330 align:start position:0%
<c.colorE5E5E5>to</c><c.colorCCCCCC> represent</c><c.colorE5E5E5> the fact that the sibling</c>
<c.colorE5E5E5>relation<00:03:19.030><c> is</c><00:03:19.180><c> symmetric</c><00:03:19.810><c> so</c></c><c.colorCCCCCC><00:03:20.109><c> that</c><00:03:21.010><c> is</c></c>

00:03:21.330 --> 00:03:21.340 align:start position:0%
<c.colorE5E5E5>relation is symmetric so</c><c.colorCCCCCC> that is
 </c>

00:03:21.340 --> 00:03:23.580 align:start position:0%
<c.colorE5E5E5>relation is symmetric so</c><c.colorCCCCCC> that is
represented<00:03:21.549><c> in</c><00:03:22.120><c> the</c></c><c.colorE5E5E5><00:03:22.209><c> following</c><00:03:22.510><c> way</c><00:03:22.690><c> for</c><00:03:23.409><c> all</c></c>

00:03:23.580 --> 00:03:23.590 align:start position:0%
represented<c.colorCCCCCC> in the</c><c.colorE5E5E5> following way for all
 </c>

00:03:23.590 --> 00:03:26.610 align:start position:0%
represented<c.colorCCCCCC> in the</c><c.colorE5E5E5> following way for all
x<00:03:23.859><c> and</c><00:03:24.099><c> y</c><00:03:24.250><c> sibling</c></c><c.colorCCCCCC><00:03:25.090><c> XY</c><00:03:25.569><c> is</c></c><c.colorE5E5E5><00:03:25.870><c> equivalent</c><00:03:26.560><c> to</c></c>

00:03:26.610 --> 00:03:26.620 align:start position:0%
x<c.colorE5E5E5> and y sibling</c><c.colorCCCCCC> XY is</c><c.colorE5E5E5> equivalent to
 </c>

00:03:26.620 --> 00:03:30.300 align:start position:0%
x<c.colorE5E5E5> and y sibling</c><c.colorCCCCCC> XY is</c><c.colorE5E5E5> equivalent to
sibling<00:03:27.099><c> Y</c></c><c.colorCCCCCC><00:03:27.280><c> X</c><00:03:28.200><c> now</c><00:03:29.200><c> let's</c><00:03:29.440><c> see</c><00:03:29.620><c> how</c><00:03:29.829><c> we</c><00:03:29.889><c> can</c><00:03:30.190><c> do</c></c>

00:03:30.300 --> 00:03:30.310 align:start position:0%
sibling<c.colorE5E5E5> Y</c><c.colorCCCCCC> X now let's see how we can do
 </c>

00:03:30.310 --> 00:03:31.979 align:start position:0%
sibling<c.colorE5E5E5> Y</c><c.colorCCCCCC> X now let's see how we can do</c>
<c.colorE5E5E5>inference<00:03:30.760><c> in</c><00:03:30.910><c> a</c><00:03:31.000><c> little</c><00:03:31.269><c> bit</c><00:03:31.389><c> more</c><00:03:31.599><c> detail</c></c>

00:03:31.979 --> 00:03:31.989 align:start position:0%
<c.colorE5E5E5>inference in a little bit more detail
 </c>

00:03:31.989 --> 00:03:33.539 align:start position:0%
<c.colorE5E5E5>inference in a little bit more detail</c>
<c.colorE5E5E5>the<00:03:32.560><c> next</c><00:03:32.769><c> thing</c><00:03:32.889><c> that</c><00:03:32.919><c> I</c><00:03:33.069><c> want</c><00:03:33.280><c> to</c><00:03:33.340><c> introduce</c></c>

00:03:33.539 --> 00:03:33.549 align:start position:0%
<c.colorE5E5E5>the next thing that I want to introduce
 </c>

00:03:33.549 --> 00:03:37.500 align:start position:0%
<c.colorE5E5E5>the next thing that I want to introduce
is</c><c.colorCCCCCC><00:03:33.970><c> Universal</c><00:03:34.720><c> instantiation</c><00:03:35.730><c> so</c><00:03:36.730><c> we</c><00:03:37.030><c> can</c><00:03:37.329><c> say</c></c>

00:03:37.500 --> 00:03:37.510 align:start position:0%
<c.colorE5E5E5>is</c><c.colorCCCCCC> Universal instantiation so we can say
 </c>

00:03:37.510 --> 00:03:39.030 align:start position:0%
<c.colorE5E5E5>is</c><c.colorCCCCCC> Universal instantiation so we can say</c>
<c.colorCCCCCC>that<00:03:37.660><c> every</c><00:03:38.019><c> instantiation</c><00:03:38.650><c> of</c><00:03:38.919><c> a</c></c>

00:03:39.030 --> 00:03:39.040 align:start position:0%
<c.colorCCCCCC>that every instantiation of a
 </c>

00:03:39.040 --> 00:03:40.949 align:start position:0%
<c.colorCCCCCC>that every instantiation of a
universally<00:03:39.730><c> quantified</c><00:03:40.329><c> sentence</c><00:03:40.840><c> is</c></c>

00:03:40.949 --> 00:03:40.959 align:start position:0%
universally quantified sentence is
 

00:03:40.959 --> 00:03:43.740 align:start position:0%
universally quantified sentence is
<c.colorE5E5E5>entailed<00:03:41.470><c> by</c><00:03:41.739><c> it</c></c><c.colorCCCCCC><00:03:41.799><c> so</c><00:03:42.669><c> if</c><00:03:42.910><c> we</c><00:03:43.090><c> know</c><00:03:43.269><c> that</c></c><c.colorE5E5E5><00:03:43.299><c> for</c></c>

00:03:43.740 --> 00:03:43.750 align:start position:0%
<c.colorE5E5E5>entailed by it</c><c.colorCCCCCC> so if we know that</c><c.colorE5E5E5> for
 </c>

00:03:43.750 --> 00:03:48.270 align:start position:0%
<c.colorE5E5E5>entailed by it</c><c.colorCCCCCC> so if we know that</c><c.colorE5E5E5> for</c>
<c.colorCCCCCC>all<00:03:43.930><c> V</c><00:03:44.799><c> alpha</c><00:03:45.639><c> is</c></c><c.colorE5E5E5><00:03:45.730><c> 2</c><00:03:46.000><c> we</c><00:03:46.750><c> can</c><00:03:46.930><c> infer</c></c><c.colorCCCCCC><00:03:47.319><c> that</c><00:03:47.590><c> any</c></c>

00:03:48.270 --> 00:03:48.280 align:start position:0%
<c.colorCCCCCC>all V alpha is</c><c.colorE5E5E5> 2 we can infer</c><c.colorCCCCCC> that any
 </c>

00:03:48.280 --> 00:03:50.670 align:start position:0%
<c.colorCCCCCC>all V alpha is</c><c.colorE5E5E5> 2 we can infer</c><c.colorCCCCCC> that any
substitution<00:03:49.180><c> where</c><00:03:49.359><c> V</c><00:03:49.690><c> is</c><00:03:49.959><c> replaced</c><00:03:50.410><c> by</c></c><c.colorE5E5E5><00:03:50.560><c> a</c></c>

00:03:50.670 --> 00:03:50.680 align:start position:0%
substitution where V<c.colorCCCCCC> is replaced by</c><c.colorE5E5E5> a
 </c>

00:03:50.680 --> 00:03:54.710 align:start position:0%
substitution where V<c.colorCCCCCC> is replaced by</c><c.colorE5E5E5> a
specific<00:03:51.400><c> instance</c><00:03:51.819><c> G</c><00:03:52.299><c> is</c><00:03:52.690><c> also</c><00:03:53.620><c> true</c></c><c.colorCCCCCC><00:03:53.799><c> for</c><00:03:53.980><c> a</c></c>

00:03:54.710 --> 00:03:54.720 align:start position:0%
<c.colorE5E5E5>specific instance G is also true</c><c.colorCCCCCC> for a
 </c>

00:03:54.720 --> 00:03:57.629 align:start position:0%
<c.colorE5E5E5>specific instance G is also true</c><c.colorCCCCCC> for a
so<00:03:55.720><c> this</c></c><c.colorE5E5E5><00:03:55.840><c> is</c><00:03:55.989><c> true</c><00:03:56.169><c> for</c><00:03:56.319><c> any</c><00:03:56.530><c> variable</c><00:03:56.949><c> V</c><00:03:57.340><c> and</c></c>

00:03:57.629 --> 00:03:57.639 align:start position:0%
so this<c.colorE5E5E5> is true for any variable V and
 </c>

00:03:57.639 --> 00:03:59.879 align:start position:0%
so this<c.colorE5E5E5> is true for any variable V and
any<00:03:57.790><c> ground</c><00:03:58.180><c> term</c><00:03:58.449><c> for</c><00:03:58.690><c> example</c><00:03:58.720><c> constant</c><00:03:59.620><c> G</c></c>

00:03:59.879 --> 00:03:59.889 align:start position:0%
any<c.colorE5E5E5> ground term for example constant G
 </c>

00:03:59.889 --> 00:04:04.680 align:start position:0%
any<c.colorE5E5E5> ground term for example constant G</c>
<c.colorE5E5E5>so<00:04:00.459><c> here's</c><00:04:00.699><c> an</c><00:04:00.819><c> example</c><00:04:00.989><c> for</c></c><c.colorCCCCCC><00:04:01.989><c> Oh</c><00:04:02.049><c> X</c><00:04:02.790><c> cat</c><00:04:03.790><c> is</c><00:04:04.030><c> X</c><00:04:04.299><c> I</c></c>

00:04:04.680 --> 00:04:04.690 align:start position:0%
<c.colorE5E5E5>so here's an example for</c><c.colorCCCCCC> Oh X cat is X I
 </c>

00:04:04.690 --> 00:04:07.589 align:start position:0%
<c.colorE5E5E5>so here's an example for</c><c.colorCCCCCC> Oh X cat is X I
mean<00:04:04.900><c> X</c></c><c.colorE5E5E5><00:04:05.230><c> is</c><00:04:05.349><c> a</c><00:04:05.379><c> cat</c><00:04:05.709><c> and</c><00:04:05.980><c> fish</c><00:04:06.340><c> is</c></c><c.colorCCCCCC><00:04:06.519><c> y</c></c><c.colorE5E5E5><00:04:06.730><c> implies</c></c>

00:04:07.589 --> 00:04:07.599 align:start position:0%
<c.colorCCCCCC>mean X</c><c.colorE5E5E5> is a cat and fish is</c><c.colorCCCCCC> y</c><c.colorE5E5E5> implies
 </c>

00:04:07.599 --> 00:04:10.740 align:start position:0%
<c.colorCCCCCC>mean X</c><c.colorE5E5E5> is a cat and fish is</c><c.colorCCCCCC> y</c><c.colorE5E5E5> implies
that<00:04:07.870><c> X</c><00:04:08.199><c> is</c><00:04:08.530><c> y</c><00:04:08.799><c> this</c><00:04:09.609><c> can</c><00:04:09.790><c> be</c></c><c.colorCCCCCC><00:04:09.910><c> represented</c></c><c.colorE5E5E5><00:04:10.540><c> as</c></c>

00:04:10.740 --> 00:04:10.750 align:start position:0%
that X<c.colorE5E5E5> is y this can be</c><c.colorCCCCCC> represented</c><c.colorE5E5E5> as
 </c>

00:04:10.750 --> 00:04:14.039 align:start position:0%
that X<c.colorE5E5E5> is y this can be</c><c.colorCCCCCC> represented</c><c.colorE5E5E5> as
in<00:04:11.230><c> the</c><00:04:11.560><c> following</c><00:04:11.769><c> substitution</c><00:04:12.900><c> Martin</c><00:04:13.900><c> is</c></c>

00:04:14.039 --> 00:04:14.049 align:start position:0%
in<c.colorE5E5E5> the following substitution Martin is
 </c>

00:04:14.049 --> 00:04:17.270 align:start position:0%
in<c.colorE5E5E5> the following substitution Martin is
a<00:04:14.079><c> cat</c><00:04:14.440><c> and</c><00:04:14.769><c> blob</c><00:04:15.040><c> is</c><00:04:15.220><c> a</c><00:04:15.250><c> fish</c><00:04:15.579><c> implies</c><00:04:16.449><c> that</c></c>

00:04:17.270 --> 00:04:17.280 align:start position:0%
a cat and blob is a fish implies<c.colorE5E5E5> that
 </c>

00:04:17.280 --> 00:04:21.599 align:start position:0%
a cat and blob is a fish implies<c.colorE5E5E5> that
Martin<00:04:18.280><c> eats</c><00:04:18.549><c> blob</c><00:04:19.949><c> now</c></c><c.colorCCCCCC><00:04:20.949><c> in</c></c><c.colorE5E5E5><00:04:21.099><c> example</c><00:04:21.549><c> of</c></c>

00:04:21.599 --> 00:04:21.609 align:start position:0%
Martin eats blob<c.colorE5E5E5> now</c><c.colorCCCCCC> in</c><c.colorE5E5E5> example of
 </c>

00:04:21.609 --> 00:04:24.120 align:start position:0%
Martin eats blob<c.colorE5E5E5> now</c><c.colorCCCCCC> in</c><c.colorE5E5E5> example of
existential<00:04:22.300><c> instantiation</c><00:04:22.979><c> for</c><00:04:23.979><c> any</c></c>

00:04:24.120 --> 00:04:24.130 align:start position:0%
existential instantiation<c.colorE5E5E5> for any
 </c>

00:04:24.130 --> 00:04:26.100 align:start position:0%
existential instantiation<c.colorE5E5E5> for any
sentence<00:04:24.610><c> alpha</c><00:04:25.180><c> and</c><00:04:25.270><c> variable</c><00:04:25.720><c> V</c></c><c.colorCCCCCC><00:04:25.930><c> and</c></c>

00:04:26.100 --> 00:04:26.110 align:start position:0%
sentence alpha and variable V<c.colorCCCCCC> and
 </c>

00:04:26.110 --> 00:04:28.409 align:start position:0%
sentence alpha and variable V<c.colorCCCCCC> and
constant<00:04:26.620><c> simple</c></c><c.colorE5E5E5><00:04:26.979><c> K</c><00:04:27.310><c> which</c><00:04:27.669><c> doesn't</c><00:04:28.120><c> appear</c></c>

00:04:28.409 --> 00:04:28.419 align:start position:0%
constant simple<c.colorE5E5E5> K which doesn't appear
 </c>

00:04:28.419 --> 00:04:30.510 align:start position:0%
constant simple<c.colorE5E5E5> K which doesn't appear
somewhere<00:04:28.810><c> else</c><00:04:28.960><c> in</c></c><c.colorCCCCCC><00:04:29.110><c> the</c><00:04:29.199><c> knowledge</c></c><c.colorE5E5E5><00:04:29.349><c> base</c></c><c.colorCCCCCC><00:04:29.530><c> if</c></c>

00:04:30.510 --> 00:04:30.520 align:start position:0%
somewhere else in<c.colorCCCCCC> the knowledge</c><c.colorE5E5E5> base</c><c.colorCCCCCC> if
 </c>

00:04:30.520 --> 00:04:33.180 align:start position:0%
somewhere else in<c.colorCCCCCC> the knowledge</c><c.colorE5E5E5> base</c><c.colorCCCCCC> if
we<00:04:30.760><c> know</c></c><c.colorE5E5E5><00:04:30.969><c> that</c><00:04:31.210><c> there</c><00:04:31.479><c> exists</c><00:04:32.020><c> V</c></c><c.colorCCCCCC><00:04:32.890><c> for</c><00:04:33.159><c> which</c></c>

00:04:33.180 --> 00:04:33.190 align:start position:0%
we know<c.colorE5E5E5> that there exists V</c><c.colorCCCCCC> for which
 </c>

00:04:33.190 --> 00:04:35.279 align:start position:0%
we know<c.colorE5E5E5> that there exists V</c><c.colorCCCCCC> for which
alpha<00:04:33.580><c> is</c><00:04:33.789><c> 2</c><00:04:34.169><c> which</c></c>

00:04:35.279 --> 00:04:35.289 align:start position:0%
alpha is 2<c.colorCCCCCC> which
 </c>

00:04:35.289 --> 00:04:37.469 align:start position:0%
alpha is 2<c.colorCCCCCC> which
for<00:04:35.710><c> that</c><00:04:35.889><c> if</c><00:04:36.189><c> we</c><00:04:36.339><c> replace</c><00:04:36.490><c> this</c><00:04:36.969><c> view</c><00:04:37.270><c> with</c><00:04:37.419><c> a</c></c>

00:04:37.469 --> 00:04:37.479 align:start position:0%
for that if we replace<c.colorCCCCCC> this view with a
 </c>

00:04:37.479 --> 00:04:40.439 align:start position:0%
for that if we replace<c.colorCCCCCC> this view with a
specific</c><c.colorE5E5E5><00:04:37.719><c> constant</c><00:04:38.469><c> symbol</c><00:04:38.830><c> K</c><00:04:39.099><c> the</c><00:04:39.999><c> statement</c></c>

00:04:40.439 --> 00:04:40.449 align:start position:0%
specific<c.colorE5E5E5> constant symbol K the statement
 </c>

00:04:40.449 --> 00:04:43.109 align:start position:0%
specific<c.colorE5E5E5> constant symbol K the statement</c>
<c.colorE5E5E5>alpha<00:04:40.839><c> is</c><00:04:40.960><c> also</c></c><c.colorCCCCCC><00:04:41.110><c> going</c><00:04:41.409><c> to</c></c><c.colorE5E5E5><00:04:41.499><c> be</c><00:04:41.710><c> true</c></c><c.colorCCCCCC><00:04:41.939><c> so</c><00:04:42.939><c> for</c></c>

00:04:43.109 --> 00:04:43.119 align:start position:0%
<c.colorE5E5E5>alpha is also</c><c.colorCCCCCC> going to</c><c.colorE5E5E5> be true</c><c.colorCCCCCC> so for
 </c>

00:04:43.119 --> 00:04:45.709 align:start position:0%
<c.colorE5E5E5>alpha is also</c><c.colorCCCCCC> going to</c><c.colorE5E5E5> be true</c><c.colorCCCCCC> so for</c>
<c.colorE5E5E5>example<00:04:43.569><c> if</c><00:04:43.749><c> we</c><00:04:43.960><c> have</c><00:04:44.169><c> the</c><00:04:44.529><c> exists</c><00:04:44.919><c> a</c><00:04:45.009><c> cat</c></c>

00:04:45.709 --> 00:04:45.719 align:start position:0%
<c.colorE5E5E5>example if we have the exists a cat
 </c>

00:04:45.719 --> 00:04:50.129 align:start position:0%
<c.colorE5E5E5>example if we have the exists a cat
called<00:04:46.719><c> X</c></c><c.colorCCCCCC><00:04:47.020><c> and</c><00:04:47.430><c> exits</c></c><c.colorE5E5E5><00:04:48.430><c> fish</c><00:04:49.180><c> we</c><00:04:49.689><c> can</c><00:04:49.869><c> represent</c></c>

00:04:50.129 --> 00:04:50.139 align:start position:0%
called<c.colorE5E5E5> X</c><c.colorCCCCCC> and exits</c><c.colorE5E5E5> fish we can represent
 </c>

00:04:50.139 --> 00:04:53.609 align:start position:0%
called<c.colorE5E5E5> X</c><c.colorCCCCCC> and exits</c><c.colorE5E5E5> fish we can represent
this<00:04:50.529><c> using</c><00:04:51.039><c> a</c><00:04:51.069><c> c1</c><00:04:51.699><c> as</c><00:04:51.969><c> a</c><00:04:52.029><c> specific</c><00:04:52.689><c> cat</c><00:04:53.409><c> the</c></c>

00:04:53.609 --> 00:04:53.619 align:start position:0%
this using a c1<c.colorE5E5E5> as a specific cat the
 </c>

00:04:53.619 --> 00:04:56.249 align:start position:0%
this using a c1<c.colorE5E5E5> as a specific cat the
one<00:04:53.800><c> that</c><00:04:53.979><c> exists</c><00:04:54.729><c> and</c><00:04:54.879><c> we</c><00:04:55.599><c> can</c><00:04:55.749><c> claim</c></c><c.colorCCCCCC><00:04:56.020><c> for</c></c>

00:04:56.249 --> 00:04:56.259 align:start position:0%
one that exists and we can claim<c.colorCCCCCC> for
 </c>

00:04:56.259 --> 00:04:58.559 align:start position:0%
one that exists and we can claim<c.colorCCCCCC> for
that</c><c.colorE5E5E5><00:04:56.289><c> specific</c><00:04:57.099><c> cat</c></c><c.colorCCCCCC><00:04:57.309><c> see</c><00:04:57.639><c> one</c></c><c.colorE5E5E5><00:04:57.849><c> that</c><00:04:58.029><c> c1</c><00:04:58.240><c> is</c></c><c.colorCCCCCC><00:04:58.419><c> a</c></c>

00:04:58.559 --> 00:04:58.569 align:start position:0%
that<c.colorE5E5E5> specific cat</c><c.colorCCCCCC> see one</c><c.colorE5E5E5> that c1 is</c><c.colorCCCCCC> a
 </c>

00:04:58.569 --> 00:05:02.850 align:start position:0%
that<c.colorE5E5E5> specific cat</c><c.colorCCCCCC> see one</c><c.colorE5E5E5> that c1 is</c><c.colorCCCCCC> a
cat<00:04:58.899><c> and</c><00:04:59.199><c> at</c><00:04:59.319><c> c1</c><00:04:59.619><c> it's</c><00:05:00.009><c> fish</c><00:05:01.409><c> by</c><00:05:02.409><c> the</c></c><c.colorE5E5E5><00:05:02.439><c> way</c><00:05:02.680><c> this</c></c>

00:05:02.850 --> 00:05:02.860 align:start position:0%
cat and at c1<c.colorCCCCCC> it's fish by the</c><c.colorE5E5E5> way this
 </c>

00:05:02.860 --> 00:05:05.760 align:start position:0%
cat and at c1<c.colorCCCCCC> it's fish by the</c><c.colorE5E5E5> way this
special<00:05:03.849><c> constant</c><00:05:04.300><c> symbol</c><00:05:04.719><c> is</c><00:05:04.899><c> known</c><00:05:05.379><c> in</c><00:05:05.649><c> the</c></c>

00:05:05.760 --> 00:05:05.770 align:start position:0%
special constant symbol is known in the
 

00:05:05.770 --> 00:05:10.109 align:start position:0%
special constant symbol is known in the
logic<00:05:06.129><c> field</c><00:05:06.490><c> as</c><c.colorCCCCCC><00:05:06.729><c> ass</c><00:05:06.939><c> column</c><00:05:07.419><c> constant</c><00:05:09.119><c> so</c></c>

00:05:10.109 --> 00:05:10.119 align:start position:0%
logic field as<c.colorCCCCCC> ass column constant so
 </c>

00:05:10.119 --> 00:05:10.859 align:start position:0%
logic field as<c.colorCCCCCC> ass column constant so
let's<00:05:10.330><c> talk</c></c><c.colorE5E5E5><00:05:10.479><c> a</c><00:05:10.539><c> little</c><00:05:10.599><c> bit</c></c><c.colorCCCCCC><00:05:10.779><c> about</c></c>

00:05:10.859 --> 00:05:10.869 align:start position:0%
let's talk<c.colorE5E5E5> a little bit</c><c.colorCCCCCC> about
 </c>

00:05:10.869 --> 00:05:14.609 align:start position:0%
let's talk<c.colorE5E5E5> a little bit</c><c.colorCCCCCC> about
unification</c><c.colorE5E5E5><00:05:12.300><c> so</c><00:05:13.300><c> unification</c><00:05:14.080><c> is</c><00:05:14.199><c> done</c><00:05:14.409><c> when</c></c>

00:05:14.609 --> 00:05:14.619 align:start position:0%
unification<c.colorE5E5E5> so unification is done when
 </c>

00:05:14.619 --> 00:05:16.529 align:start position:0%
unification<c.colorE5E5E5> so unification is done when
you<00:05:14.740><c> have</c></c><c.colorCCCCCC><00:05:14.770><c> a</c><00:05:14.949><c> possible</c><00:05:15.520><c> substitution</c><00:05:16.330><c> for</c></c>

00:05:16.529 --> 00:05:16.539 align:start position:0%
you have<c.colorCCCCCC> a possible substitution for
 </c>

00:05:16.539 --> 00:05:19.619 align:start position:0%
you have<c.colorCCCCCC> a possible substitution for
example<00:05:16.990><c> if</c><00:05:17.919><c> we</c><00:05:18.309><c> have</c><00:05:18.520><c> the</c><00:05:18.669><c> statements</c></c><c.colorE5E5E5><00:05:19.209><c> P</c></c>

00:05:19.619 --> 00:05:19.629 align:start position:0%
example if we have the statements<c.colorE5E5E5> P
 </c>

00:05:19.629 --> 00:05:23.070 align:start position:0%
example if we have the statements<c.colorE5E5E5> P
which</c><c.colorCCCCCC><00:05:20.199><c> is</c></c><c.colorE5E5E5><00:05:20.379><c> X</c></c><c.colorCCCCCC><00:05:20.709><c> its</c><00:05:21.189><c> Y</c><00:05:21.490><c> and</c><00:05:21.849><c> the</c><00:05:22.300><c> statement</c><00:05:22.719><c> Q</c></c>

00:05:23.070 --> 00:05:23.080 align:start position:0%
which<c.colorCCCCCC> is</c><c.colorE5E5E5> X</c><c.colorCCCCCC> its Y and the statement Q
 </c>

00:05:23.080 --> 00:05:26.549 align:start position:0%
which<c.colorCCCCCC> is</c><c.colorE5E5E5> X</c><c.colorCCCCCC> its Y and the statement Q
which<00:05:23.439><c> is</c></c><c.colorE5E5E5><00:05:23.469><c> X</c><00:05:23.889><c> its</c><00:05:24.249><c> blob</c><00:05:24.809><c> it's</c><00:05:25.809><c> possible</c><00:05:26.379><c> to</c></c>

00:05:26.549 --> 00:05:26.559 align:start position:0%
which is<c.colorE5E5E5> X its blob it's possible to
 </c>

00:05:26.559 --> 00:05:29.159 align:start position:0%
which is<c.colorE5E5E5> X its blob it's possible to
unify<00:05:26.979><c> those</c><00:05:27.249><c> two</c><00:05:27.580><c> under</c><00:05:28.209><c> the</c><00:05:28.360><c> substitution</c></c>

00:05:29.159 --> 00:05:29.169 align:start position:0%
unify those two under<c.colorE5E5E5> the substitution
 </c>

00:05:29.169 --> 00:05:31.709 align:start position:0%
unify those two under<c.colorE5E5E5> the substitution
that</c><c.colorCCCCCC><00:05:29.199><c> it</c><00:05:29.529><c> places</c></c><c.colorE5E5E5><00:05:29.800><c> the</c><00:05:30.309><c> variable</c><00:05:30.819><c> Y</c><00:05:31.089><c> with</c><00:05:31.689><c> a</c></c>

00:05:31.709 --> 00:05:31.719 align:start position:0%
that<c.colorCCCCCC> it places</c><c.colorE5E5E5> the variable Y with a
 </c>

00:05:31.719 --> 00:05:35.489 align:start position:0%
that<c.colorCCCCCC> it places</c><c.colorE5E5E5> the variable Y with a
specific</c><c.colorCCCCCC><00:05:32.020><c> object</c></c><c.colorE5E5E5><00:05:32.469><c> blob</c><00:05:33.839><c> another</c><00:05:34.839><c> example</c><00:05:35.349><c> if</c></c>

00:05:35.489 --> 00:05:35.499 align:start position:0%
specific<c.colorCCCCCC> object</c><c.colorE5E5E5> blob another example if
 </c>

00:05:35.499 --> 00:05:38.399 align:start position:0%
specific<c.colorCCCCCC> object</c><c.colorE5E5E5> blob another example if
P<00:05:35.740><c> is</c><00:05:35.979><c> the</c><00:05:36.129><c> statement</c></c><c.colorCCCCCC><00:05:36.369><c> Martin</c><00:05:37.270><c> eats</c><00:05:37.449><c> Y</c><00:05:37.749><c> and</c><00:05:38.110><c> Q</c></c>

00:05:38.399 --> 00:05:38.409 align:start position:0%
P is the statement<c.colorCCCCCC> Martin eats Y and Q
 </c>

00:05:38.409 --> 00:05:40.679 align:start position:0%
P is the statement<c.colorCCCCCC> Martin eats Y and Q
is<00:05:38.469><c> the</c><00:05:38.529><c> statement</c><00:05:39.099><c> X</c></c><c.colorE5E5E5><00:05:39.309><c> its</c><00:05:39.669><c> blob</c></c><c.colorCCCCCC><00:05:40.029><c> it</c><00:05:40.449><c> is</c></c>

00:05:40.679 --> 00:05:40.689 align:start position:0%
is the<c.colorCCCCCC> statement X</c><c.colorE5E5E5> its blob</c><c.colorCCCCCC> it is
 </c>

00:05:40.689 --> 00:05:43.259 align:start position:0%
is the<c.colorCCCCCC> statement X</c><c.colorE5E5E5> its blob</c><c.colorCCCCCC> it is
possible<00:05:41.199><c> to</c><00:05:41.229><c> unify</c><00:05:41.769><c> those</c><00:05:41.979><c> two</c><00:05:42.339><c> using</c><00:05:43.240><c> the</c></c>

00:05:43.259 --> 00:05:43.269 align:start position:0%
possible to unify those two using the
 

00:05:43.269 --> 00:05:46.969 align:start position:0%
possible to unify those two using the
<c.colorE5E5E5>substitution<00:05:43.779><c> X</c><00:05:44.379><c> is</c><00:05:44.680><c> Martin</c><00:05:45.219><c> and</c></c><c.colorCCCCCC><00:05:45.339><c> y's</c><00:05:45.610><c> blob</c></c>

00:05:46.969 --> 00:05:46.979 align:start position:0%
<c.colorE5E5E5>substitution X is Martin and</c><c.colorCCCCCC> y's blob
 </c>

00:05:46.979 --> 00:05:49.709 align:start position:0%
<c.colorE5E5E5>substitution X is Martin and</c><c.colorCCCCCC> y's blob</c>
<c.colorE5E5E5>another<00:05:47.979><c> example</c><00:05:48.519><c> if</c><00:05:48.669><c> P</c><00:05:48.969><c> is</c><00:05:49.029><c> the</c></c><c.colorCCCCCC><00:05:49.209><c> statement</c></c>

00:05:49.709 --> 00:05:49.719 align:start position:0%
<c.colorE5E5E5>another example if P is the</c><c.colorCCCCCC> statement
 </c>

00:05:49.719 --> 00:05:52.170 align:start position:0%
<c.colorE5E5E5>another example if P is the</c><c.colorCCCCCC> statement
marking<00:05:50.379><c> its</c><00:05:50.589><c> Y</c><00:05:50.889><c> and</c><00:05:51.309><c> this</c><00:05:51.519><c> Q</c><00:05:52.029><c> is</c><00:05:52.059><c> the</c></c>

00:05:52.170 --> 00:05:52.180 align:start position:0%
marking its Y and this Q is the
 

00:05:52.180 --> 00:05:54.719 align:start position:0%
marking its Y and this Q is the
<c.colorE5E5E5>statement<00:05:52.689><c> why</c></c><c.colorCCCCCC><00:05:53.110><c> it's</c><00:05:53.409><c> blob</c><00:05:53.769><c> it's</c><00:05:54.129><c> impossible</c></c>

00:05:54.719 --> 00:05:54.729 align:start position:0%
<c.colorE5E5E5>statement why</c><c.colorCCCCCC> it's blob it's impossible
 </c>

00:05:54.729 --> 00:05:56.899 align:start position:0%
<c.colorE5E5E5>statement why</c><c.colorCCCCCC> it's blob it's impossible</c>
<c.colorE5E5E5>to<00:05:54.879><c> unify</c><00:05:55.269><c> those</c><00:05:55.509><c> two</c><00:05:55.749><c> because</c><00:05:56.080><c> we</c><00:05:56.289><c> want</c><00:05:56.529><c> to</c></c>

00:05:56.899 --> 00:05:56.909 align:start position:0%
<c.colorE5E5E5>to unify those two because we want to
 </c>

00:05:56.909 --> 00:05:58.860 align:start position:0%
<c.colorE5E5E5>to unify those two because we want to
simultaneously<00:05:57.909><c> satisfied</c><00:05:58.509><c> two</c></c>

00:05:58.860 --> 00:05:58.870 align:start position:0%
<c.colorE5E5E5>simultaneously satisfied two
 </c>

00:05:58.870 --> 00:06:01.499 align:start position:0%
<c.colorE5E5E5>simultaneously satisfied two
substitutions</c><c.colorCCCCCC><00:05:59.769><c> we</c><00:06:00.249><c> want</c><00:06:00.490><c> Y</c></c><c.colorE5E5E5><00:06:00.759><c> to</c><00:06:00.819><c> be</c></c><c.colorCCCCCC><00:06:01.149><c> equal</c><00:06:01.360><c> to</c></c>

00:06:01.499 --> 00:06:01.509 align:start position:0%
substitutions<c.colorCCCCCC> we want Y</c><c.colorE5E5E5> to be</c><c.colorCCCCCC> equal to
 </c>

00:06:01.509 --> 00:06:03.509 align:start position:0%
substitutions<c.colorCCCCCC> we want Y</c><c.colorE5E5E5> to be</c><c.colorCCCCCC> equal to
Martin<00:06:02.019><c> and</c></c><c.colorE5E5E5><00:06:02.199><c> white</c><00:06:02.439><c> we</c><00:06:02.740><c> go</c><00:06:02.889><c> to</c><00:06:02.949><c> blob</c><00:06:03.339><c> and</c></c>

00:06:03.509 --> 00:06:03.519 align:start position:0%
Martin and<c.colorE5E5E5> white we go to blob and
 </c>

00:06:03.519 --> 00:06:05.249 align:start position:0%
Martin and<c.colorE5E5E5> white we go to blob and
because<00:06:03.849><c> Martin</c><00:06:04.269><c> and</c><00:06:04.449><c> blob</c><00:06:04.659><c> are</c><00:06:04.839><c> different</c></c>

00:06:05.249 --> 00:06:05.259 align:start position:0%
because Martin and blob are different
 

00:06:05.259 --> 00:06:07.889 align:start position:0%
because Martin and blob are different
then<00:06:06.189><c> the</c><00:06:06.339><c> unification</c><00:06:06.999><c> process</c><c.colorE5E5E5><00:06:07.029><c> is</c><00:06:07.569><c> going</c><00:06:07.779><c> to</c></c>

00:06:07.889 --> 00:06:07.899 align:start position:0%
then the unification process<c.colorE5E5E5> is going to
 </c>

00:06:07.899 --> 00:06:11.159 align:start position:0%
then the unification process<c.colorE5E5E5> is going to
fail<00:06:09.059><c> okay</c><00:06:10.059><c> so</c><00:06:10.180><c> there</c><00:06:10.300><c> are</c><00:06:10.389><c> many</c></c><c.colorCCCCCC><00:06:10.539><c> cases</c></c><c.colorE5E5E5><00:06:10.990><c> where</c></c>

00:06:11.159 --> 00:06:11.169 align:start position:0%
fail<c.colorE5E5E5> okay so there are many</c><c.colorCCCCCC> cases</c><c.colorE5E5E5> where
 </c>

00:06:11.169 --> 00:06:13.769 align:start position:0%
fail<c.colorE5E5E5> okay so there are many</c><c.colorCCCCCC> cases</c><c.colorE5E5E5> where
we<00:06:11.289><c> can</c><00:06:11.469><c> do</c><00:06:11.680><c> unification</c><00:06:12.490><c> one</c><00:06:13.119><c> is</c><00:06:13.300><c> if</c><00:06:13.449><c> we</c><00:06:13.569><c> want</c></c>

00:06:13.769 --> 00:06:13.779 align:start position:0%
we can do unification<c.colorE5E5E5> one is if we want
 </c>

00:06:13.779 --> 00:06:15.439 align:start position:0%
we can do unification<c.colorE5E5E5> one is if we want
to<00:06:13.869><c> unify</c></c><c.colorCCCCCC><00:06:14.139><c> a</c><00:06:14.379><c> variable</c><00:06:14.979><c> with</c><00:06:15.099><c> an</c><00:06:15.219><c> object</c></c>

00:06:15.439 --> 00:06:15.449 align:start position:0%
to<c.colorE5E5E5> unify</c><c.colorCCCCCC> a variable with an object
 </c>

00:06:15.449 --> 00:06:17.670 align:start position:0%
to<c.colorE5E5E5> unify</c><c.colorCCCCCC> a variable with an object</c>
<c.colorE5E5E5>another<00:06:16.449><c> example</c><00:06:16.930><c> is</c><00:06:16.990><c> when</c><00:06:17.080><c> we</c><00:06:17.229><c> want</c><00:06:17.409><c> to</c><00:06:17.499><c> unify</c></c>

00:06:17.670 --> 00:06:17.680 align:start position:0%
<c.colorE5E5E5>another example is when we want to unify
 </c>

00:06:17.680 --> 00:06:20.869 align:start position:0%
<c.colorE5E5E5>another example is when we want to unify
two<00:06:17.919><c> objects</c><00:06:18.519><c> and</c><00:06:18.669><c> they</c><00:06:18.759><c> are</c><00:06:18.879><c> the</c><00:06:19.029><c> same</c><00:06:19.240><c> object</c></c>

00:06:20.869 --> 00:06:20.879 align:start position:0%
two objects and they are the same object
 

00:06:20.879 --> 00:06:23.759 align:start position:0%
two objects and they are the same object
<c.colorCCCCCC>it</c><c.colorE5E5E5><00:06:21.879><c> is</c><00:06:22.059><c> also</c><00:06:22.240><c> possible</c></c><c.colorCCCCCC><00:06:22.539><c> to</c><00:06:22.839><c> unify</c><00:06:23.319><c> two</c><00:06:23.379><c> things</c></c>

00:06:23.759 --> 00:06:23.769 align:start position:0%
<c.colorCCCCCC>it</c><c.colorE5E5E5> is also possible</c><c.colorCCCCCC> to unify two things
 </c>

00:06:23.769 --> 00:06:26.070 align:start position:0%
<c.colorCCCCCC>it</c><c.colorE5E5E5> is also possible</c><c.colorCCCCCC> to unify two things
if<00:06:23.949><c> one</c><00:06:24.159><c> of</c><00:06:24.309><c> them</c><00:06:24.430><c> subsumes</c><00:06:24.999><c> the</c></c><c.colorE5E5E5><00:06:25.119><c> other</c><00:06:25.330><c> one</c><00:06:25.629><c> so</c></c>

00:06:26.070 --> 00:06:26.080 align:start position:0%
if one of them subsumes the<c.colorE5E5E5> other one so
 </c>

00:06:26.080 --> 00:06:29.249 align:start position:0%
if one of them subsumes the<c.colorE5E5E5> other one so
here's<00:06:26.319><c> an</c><00:06:26.439><c> example</c><00:06:27.479><c> we</c><00:06:28.479><c> if</c><00:06:28.659><c> we</c><00:06:28.809><c> know</c><00:06:28.930><c> that</c><00:06:29.110><c> all</c></c>

00:06:29.249 --> 00:06:29.259 align:start position:0%
here's an example<c.colorE5E5E5> we if we know that all
 </c>

00:06:29.259 --> 00:06:31.589 align:start position:0%
here's an example<c.colorE5E5E5> we if we know that all
cats<00:06:29.529><c> eat</c><00:06:29.769><c> fish</c></c><c.colorCCCCCC><00:06:30.069><c> and</c><00:06:30.430><c> we</c><00:06:30.699><c> know</c><00:06:30.849><c> that</c><00:06:30.999><c> Martin</c></c><c.colorE5E5E5><00:06:31.479><c> is</c></c>

00:06:31.589 --> 00:06:31.599 align:start position:0%
cats eat fish<c.colorCCCCCC> and we know that Martin</c><c.colorE5E5E5> is
 </c>

00:06:31.599 --> 00:06:34.170 align:start position:0%
cats eat fish<c.colorCCCCCC> and we know that Martin</c><c.colorE5E5E5> is
a<00:06:31.629><c> cat</c><00:06:31.959><c> and</c><00:06:32.169><c> blob</c><00:06:32.409><c> is</c><00:06:32.589><c> a</c><00:06:32.619><c> fish</c><00:06:32.919><c> we</c><00:06:33.639><c> can</c><00:06:33.789><c> unify</c></c>

00:06:34.170 --> 00:06:34.180 align:start position:0%
a cat and<c.colorE5E5E5> blob is a fish we can unify
 </c>

00:06:34.180 --> 00:06:37.199 align:start position:0%
a cat and<c.colorE5E5E5> blob is a fish we can unify
those<00:06:34.360><c> statements</c></c><c.colorCCCCCC><00:06:34.899><c> together</c></c>

