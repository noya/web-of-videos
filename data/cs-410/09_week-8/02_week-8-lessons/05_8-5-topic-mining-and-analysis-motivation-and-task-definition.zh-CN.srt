1
00:00:00,025 --> 00:00:06,885
[音乐]

2
00:00:06,885 --> 00:00:11,190
这一节课程是关于主题挖掘和分析的

3
00:00:11,190 --> 00:00:14,270
我们将会介绍它的动机以及任务定义

4
00:00:17,780 --> 00:00:22,630
这节课我们要讨论的是不同种类的挖掘任务

5
00:00:23,770 --> 00:00:28,310
如你在这幅路线图上所见,我们刚刚

6
00:00:28,310 --> 00:00:33,190
讲完了语言挖掘的知识

7
00:00:33,190 --> 00:00:37,987
也就是发现词汇之间的关联

8
00:00:39,190 --> 00:00:43,100
现在,从这节课开始,我们会介绍另一种挖掘的知识

9
00:00:43,100 --> 00:00:47,570
也就是内容挖掘

10
00:00:47,570 --> 00:00:55,031
并尝试发现文本的主题及与之相关的知识

11
00:00:56,140 --> 00:00:58,810
我们称之为主题挖掘和分析

12
00:00:59,920 --> 00:01:04,350
本堂课我们将会介绍它的动机以及任务定义

13
00:01:04,350 --> 00:01:08,260
所以我们先来看一下主题的概念

14
00:01:08,260 --> 00:01:12,600
我认为,我们都能理解主题是什么

15
00:01:12,600 --> 00:01:15,840
但是实际上正式给它下一个定义并不容易

16
00:01:15,840 --> 00:01:20,420
大致的说,话题是一段文本数据所讨论的主要思想

17
00:01:20,420 --> 00:01:25,860
你可以将它比作一次对话或讨论的话题

18
00:01:25,860 --> 00:01:28,420
它也可以用于不同的尺度

19
00:01:28,420 --> 00:01:31,240
比如我们可以说一句话的主题

20
00:01:31,240 --> 00:01:34,800
一篇文章的主题,一段文字的主题

21
00:01:34,800 --> 00:01:40,540
或者,对了,数字图书馆里所有研究文章的主题

22
00:01:40,540 --> 00:01:45,629
所以不同尺度上的主题挖掘会有不同的应用

23
00:01:46,760 --> 00:01:51,628
确实,有许多应用需要找到文本的主题

24
00:01:51,628 --> 00:01:52,980
然后再对其进行分析

25
00:01:52,980 --> 00:01:54,300
先看这样一些例子先看这样一些例子

26
00:01:54,300 --> 00:01:58,280
例如,我们或许会好奇今天

27
00:01:58,280 --> 00:02:00,470
Twitter上的用户都在谈论些什么?

28
00:02:00,470 --> 00:02:03,600
比如说他们是在讨论NBA比赛

29
00:02:03,600 --> 00:02:08,540
还是在谈论一些国际大事?

30
00:02:08,540 --> 00:02:12,970
又如我们对研究主题感兴趣

31
00:02:12,970 --> 00:02:17,090
例如有人会好奇现在数据挖掘的研究主题有哪些

32
00:02:17,090 --> 00:02:21,840
这些主题跟五年前又有什么不同?

33
00:02:21,840 --> 00:02:26,820
这包括了找出当下数据挖掘文献的主题

34
00:02:26,820 --> 00:02:32,910
也包括找出过去的文献主题

35
00:02:32,910 --> 00:02:34,690
然后我们可以做一个比较

36
00:02:34,690 --> 00:02:38,400
我们也可能好奇人们喜欢某些产品
比如iPhone 6的哪些地方

37
00:02:38,400 --> 00:02:43,710
以及不喜欢哪些地方

38
00:02:43,710 --> 00:02:48,360
这包括找出对iPhone 6的正面观点的主题

39
00:02:48,360 --> 00:02:52,470
还有负面评论的主题

40
00:02:52,470 --> 00:02:56,810
或者说我们想知道2012年美国总统大选中

41
00:02:56,810 --> 00:02:58,110
有哪些主要的议题?

42
00:02:59,780 --> 00:03:04,800
这些例子都需要找到主题并加以分析

43
00:03:04,800 --> 00:03:08,680
我们将会讲述许多用来实现它的技术

44
00:03:08,680 --> 00:03:12,920
一般而言我们可以将主题视为关于这个世界的某些知识

45
00:03:12,920 --> 00:03:17,830
所以从文本数据中我们希望找到一些主题

46
00:03:17,830 --> 00:03:22,650
这些主题能够提供一定的对世界的描述

47
00:03:22,650 --> 00:03:25,690
也让我们了解这个世界的一些事情

48
00:03:25,690 --> 00:03:28,230
例如关于一个产品或者关于一个人的事情

49
00:03:29,350 --> 00:03:32,390
当我们有一些非文本的数据的时候

50
00:03:32,390 --> 00:03:36,420
我们会有更多的背景来分析主题

51
00:03:36,420 --> 00:03:41,620
比如说我们也许知道与这段文本数据相关的时间

52
00:03:41,620 --> 00:03:47,110
或者这段文本数据是在哪里产生的

53
00:03:47,110 --> 00:03:52,945
或者这段文本的作者,或者这段文本的来源

54
00:03:52,945 --> 00:03:54,400
所有这些元数据

55
00:03:54,400 --> 00:03:59,610
或者说环境变量都能与我们找到的主题联系起来

56
00:03:59,610 --> 00:04:05,340
然后我们就能用这些环境变量来帮助分析主题的模式

57
00:04:05,340 --> 00:04:09,320
比如说通过对主题的长时间观察,我们能发现

58
00:04:09,320 --> 00:04:14,290
是否有新的主题出现,或者有什么主题逐渐消失

59
00:04:15,620 --> 00:04:18,950
类似的,通过观察来自不同地区的主题

60
00:04:18,950 --> 00:04:24,185
我们也许对不同地区人们的观点有一些了解

61
00:04:26,150 --> 00:04:29,900
这就是为什么主题挖掘非常重要

62
00:04:29,900 --> 00:04:34,540
现在让我们来看看主题挖掘和分析的任务

63
00:04:34,540 --> 00:04:39,380
一般来说,这包括首先找到大量的主题

64
00:04:39,380 --> 00:04:40,810
在这个例子中有k个

65
00:04:40,810 --> 00:04:45,430
然后我们想知道哪些文档涵盖了哪些话题

66
00:04:45,430 --> 00:04:46,600
涵盖了哪个话题

67
00:04:46,600 --> 00:04:52,970
比如说,在文档一中,我们观察到有许多关于主题1的内容

68
00:04:52,970 --> 00:04:57,390
主题2和主题k只占了一小部分

69
00:04:58,890 --> 00:05:00,712
而其它的主题并没有被提及

70
00:05:00,712 --> 00:05:06,778
另一方面,文档二大量的涉及到了主题2

71
00:05:06,778 --> 00:05:10,553
但是完全没有讲到主题1

72
00:05:10,553 --> 00:05:15,873
并且还有一定程度的主题k的内容,对吧?

73
00:05:15,873 --> 00:05:19,995
所以你可以看到这里大致上有两个不同的任务
或者说子任务

74
00:05:19,995 --> 00:05:25,760
第一个是从给出的一系列文本中找出k个主题

75
00:05:25,760 --> 00:05:27,140
这k个主题是什么?

76
00:05:27,140 --> 00:05:28,920
或者说这些文本中的主要的k个主题是什么

77
00:05:28,920 --> 00:05:33,180
第二个任务是找出哪篇文章在多大程度上

78
00:05:33,180 --> 00:05:34,430
涵盖了哪个话题

79
00:05:34,430 --> 00:05:37,810
所以我们可以给出这个问题一个更为正式的定义
如下:

80
00:05:37,810 --> 00:05:42,365
首先我们有一系列的N个文本作为输入

81
00:05:42,365 --> 00:05:47,050
这里我们将这个文本集合用C来表示

82
00:05:47,050 --> 00:05:51,740
用i来表示一篇文本

83
00:05:51,740 --> 00:05:56,700
通常我们也需要输入主题的数量k

84
00:05:56,700 --> 00:06:01,730
但是也有些技术可以自动给出建议的主题数量

85
00:06:01,730 --> 00:06:06,735
但是在我们会讨论的技术里,同时也是最有用的一些技术

86
00:06:06,735 --> 00:06:12,340
我们一般都需要给出主题的数量

87
00:06:14,580 --> 00:06:19,860
现在输出就会是我们想要找出的k个主题了

88
00:06:19,860 --> 00:06:23,210
按顺序记为θ1到θk

89
00:06:24,540 --> 00:06:29,820
我们也想生成文章di对主题的覆盖度

90
00:06:29,820 --> 00:06:32,518
用πij来表示

91
00:06:33,562 --> 00:06:38,073
πij表示文档di覆盖主题θj

92
00:06:38,073 --> 00:06:41,290
的概率

93
00:06:41,290 --> 00:06:45,450
所以很明显对于每一篇文章,我们有一系列值来表示

94
00:06:45,450 --> 00:06:47,830
这篇文章对每一个主题的涵盖程度

95
00:06:48,930 --> 00:06:53,610
我们可以假定这些概率的总和为1

96
00:06:53,610 --> 00:06:57,000
因为一篇文章不可能覆盖

97
00:06:57,000 --> 00:07:02,520
我们未发现也未讨论的主题

98
00:07:02,520 --> 00:07:08,170
所以现在问题是我们要怎么定义θi,或者说怎么定义主题?

99
00:07:08,170 --> 00:07:11,500
在我们定义什么是θ之前

100
00:07:11,500 --> 00:07:15,180
我们无法完整的定义主题挖掘和分析这个问题

101
00:07:16,970 --> 00:07:19,381
那么在接下来的几节课中

102
00:07:19,381 --> 00:07:24,211
我们将要讨论定义θ的各种方法

103
00:07:24,211 --> 00:07:34,211
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community